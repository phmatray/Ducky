### YamlMime:ManagedReference
items:
- uid: R3dux.StateChange`1
  commentId: T:R3dux.StateChange`1
  id: StateChange`1
  parent: R3dux
  children:
  - R3dux.StateChange`1.#ctor(R3dux.Abstractions.IAction,`0,`0,System.Double)
  - R3dux.StateChange`1.Action
  - R3dux.StateChange`1.ElapsedMilliseconds
  - R3dux.StateChange`1.NewState
  - R3dux.StateChange`1.PreviousState
  langs:
  - csharp
  - vb
  name: StateChange<TState>
  nameWithType: StateChange<TState>
  fullName: R3dux.StateChange<TState>
  type: Class
  source:
    remote:
      path: src/library/R3dux/StateChange.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: StateChange
    path: ../src/library/R3dux/StateChange.cs
    startLine: 16
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Represents a state change notification.
  example: []
  syntax:
    content: 'public sealed record StateChange<TState> : IEquatable<StateChange<TState>>'
    typeParameters:
    - id: TState
      description: The type of the state.
    content.vb: Public NotInheritable Class StateChange(Of TState) Implements IEquatable(Of StateChange(Of TState))
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{R3dux.StateChange`1}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: StateChange(Of TState)
  fullName.vb: R3dux.StateChange(Of TState)
  name.vb: StateChange(Of TState)
- uid: R3dux.StateChange`1.#ctor(R3dux.Abstractions.IAction,`0,`0,System.Double)
  commentId: M:R3dux.StateChange`1.#ctor(R3dux.Abstractions.IAction,`0,`0,System.Double)
  id: '#ctor(R3dux.Abstractions.IAction,`0,`0,System.Double)'
  parent: R3dux.StateChange`1
  langs:
  - csharp
  - vb
  name: StateChange(IAction, TState, TState, double)
  nameWithType: StateChange<TState>.StateChange(IAction, TState, TState, double)
  fullName: R3dux.StateChange<TState>.StateChange(R3dux.Abstractions.IAction, TState, TState, double)
  type: Constructor
  source:
    remote:
      path: src/library/R3dux/StateChange.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: .ctor
    path: ../src/library/R3dux/StateChange.cs
    startLine: 16
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Represents a state change notification.
  example: []
  syntax:
    content: public StateChange(IAction Action, TState PreviousState, TState NewState, double ElapsedMilliseconds)
    parameters:
    - id: Action
      type: R3dux.Abstractions.IAction
      description: The action causing the state change.
    - id: PreviousState
      type: '{TState}'
      description: The previous state before the change.
    - id: NewState
      type: '{TState}'
      description: The new state after the change.
    - id: ElapsedMilliseconds
      type: System.Double
      description: The time taken for the state change in milliseconds.
    content.vb: Public Sub New(Action As IAction, PreviousState As TState, NewState As TState, ElapsedMilliseconds As Double)
  overload: R3dux.StateChange`1.#ctor*
  nameWithType.vb: StateChange(Of TState).New(IAction, TState, TState, Double)
  fullName.vb: R3dux.StateChange(Of TState).New(R3dux.Abstractions.IAction, TState, TState, Double)
  name.vb: New(IAction, TState, TState, Double)
- uid: R3dux.StateChange`1.Action
  commentId: P:R3dux.StateChange`1.Action
  id: Action
  parent: R3dux.StateChange`1
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: StateChange<TState>.Action
  fullName: R3dux.StateChange<TState>.Action
  type: Property
  source:
    remote:
      path: src/library/R3dux/StateChange.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: Action
    path: ../src/library/R3dux/StateChange.cs
    startLine: 17
  assemblies:
  - R3dux
  namespace: R3dux
  summary: The action causing the state change.
  example: []
  syntax:
    content: public IAction Action { get; init; }
    parameters: []
    return:
      type: R3dux.Abstractions.IAction
    content.vb: Public Property Action As IAction
  overload: R3dux.StateChange`1.Action*
  nameWithType.vb: StateChange(Of TState).Action
  fullName.vb: R3dux.StateChange(Of TState).Action
- uid: R3dux.StateChange`1.PreviousState
  commentId: P:R3dux.StateChange`1.PreviousState
  id: PreviousState
  parent: R3dux.StateChange`1
  langs:
  - csharp
  - vb
  name: PreviousState
  nameWithType: StateChange<TState>.PreviousState
  fullName: R3dux.StateChange<TState>.PreviousState
  type: Property
  source:
    remote:
      path: src/library/R3dux/StateChange.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: PreviousState
    path: ../src/library/R3dux/StateChange.cs
    startLine: 18
  assemblies:
  - R3dux
  namespace: R3dux
  summary: The previous state before the change.
  example: []
  syntax:
    content: public TState PreviousState { get; init; }
    parameters: []
    return:
      type: '{TState}'
    content.vb: Public Property PreviousState As TState
  overload: R3dux.StateChange`1.PreviousState*
  nameWithType.vb: StateChange(Of TState).PreviousState
  fullName.vb: R3dux.StateChange(Of TState).PreviousState
- uid: R3dux.StateChange`1.NewState
  commentId: P:R3dux.StateChange`1.NewState
  id: NewState
  parent: R3dux.StateChange`1
  langs:
  - csharp
  - vb
  name: NewState
  nameWithType: StateChange<TState>.NewState
  fullName: R3dux.StateChange<TState>.NewState
  type: Property
  source:
    remote:
      path: src/library/R3dux/StateChange.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: NewState
    path: ../src/library/R3dux/StateChange.cs
    startLine: 19
  assemblies:
  - R3dux
  namespace: R3dux
  summary: The new state after the change.
  example: []
  syntax:
    content: public TState NewState { get; init; }
    parameters: []
    return:
      type: '{TState}'
    content.vb: Public Property NewState As TState
  overload: R3dux.StateChange`1.NewState*
  nameWithType.vb: StateChange(Of TState).NewState
  fullName.vb: R3dux.StateChange(Of TState).NewState
- uid: R3dux.StateChange`1.ElapsedMilliseconds
  commentId: P:R3dux.StateChange`1.ElapsedMilliseconds
  id: ElapsedMilliseconds
  parent: R3dux.StateChange`1
  langs:
  - csharp
  - vb
  name: ElapsedMilliseconds
  nameWithType: StateChange<TState>.ElapsedMilliseconds
  fullName: R3dux.StateChange<TState>.ElapsedMilliseconds
  type: Property
  source:
    remote:
      path: src/library/R3dux/StateChange.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: ElapsedMilliseconds
    path: ../src/library/R3dux/StateChange.cs
    startLine: 20
  assemblies:
  - R3dux
  namespace: R3dux
  summary: The time taken for the state change in milliseconds.
  example: []
  syntax:
    content: public double ElapsedMilliseconds { get; init; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ElapsedMilliseconds As Double
  overload: R3dux.StateChange`1.ElapsedMilliseconds*
  nameWithType.vb: StateChange(Of TState).ElapsedMilliseconds
  fullName.vb: R3dux.StateChange(Of TState).ElapsedMilliseconds
references:
- uid: R3dux
  commentId: N:R3dux
  href: R3dux.html
  name: R3dux
  nameWithType: R3dux
  fullName: R3dux
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{R3dux.StateChange`1}
  commentId: T:System.IEquatable{R3dux.StateChange`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<StateChange<TState>>
  nameWithType: IEquatable<StateChange<TState>>
  fullName: System.IEquatable<R3dux.StateChange<TState>>
  nameWithType.vb: IEquatable(Of StateChange(Of TState))
  fullName.vb: System.IEquatable(Of R3dux.StateChange(Of TState))
  name.vb: IEquatable(Of StateChange(Of TState))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: R3dux.StateChange`1
    name: StateChange
    href: R3dux.StateChange-1.html
  - name: <
  - name: TState
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.StateChange`1
    name: StateChange
    href: R3dux.StateChange-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3dux.StateChange`1.#ctor*
  commentId: Overload:R3dux.StateChange`1.#ctor
  href: R3dux.StateChange-1.html#R3dux_StateChange_1__ctor_R3dux_Abstractions_IAction__0__0_System_Double_
  name: StateChange
  nameWithType: StateChange<TState>.StateChange
  fullName: R3dux.StateChange<TState>.StateChange
  nameWithType.vb: StateChange(Of TState).New
  fullName.vb: R3dux.StateChange(Of TState).New
  name.vb: New
- uid: R3dux.Abstractions.IAction
  commentId: T:R3dux.Abstractions.IAction
  parent: R3dux.Abstractions
  href: R3dux.Abstractions.IAction.html
  name: IAction
  nameWithType: IAction
  fullName: R3dux.Abstractions.IAction
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: R3dux.Abstractions
  commentId: N:R3dux.Abstractions
  href: R3dux.html
  name: R3dux.Abstractions
  nameWithType: R3dux.Abstractions
  fullName: R3dux.Abstractions
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: R3dux.StateChange`1.Action*
  commentId: Overload:R3dux.StateChange`1.Action
  href: R3dux.StateChange-1.html#R3dux_StateChange_1_Action
  name: Action
  nameWithType: StateChange<TState>.Action
  fullName: R3dux.StateChange<TState>.Action
  nameWithType.vb: StateChange(Of TState).Action
  fullName.vb: R3dux.StateChange(Of TState).Action
- uid: R3dux.StateChange`1.PreviousState*
  commentId: Overload:R3dux.StateChange`1.PreviousState
  href: R3dux.StateChange-1.html#R3dux_StateChange_1_PreviousState
  name: PreviousState
  nameWithType: StateChange<TState>.PreviousState
  fullName: R3dux.StateChange<TState>.PreviousState
  nameWithType.vb: StateChange(Of TState).PreviousState
  fullName.vb: R3dux.StateChange(Of TState).PreviousState
- uid: R3dux.StateChange`1.NewState*
  commentId: Overload:R3dux.StateChange`1.NewState
  href: R3dux.StateChange-1.html#R3dux_StateChange_1_NewState
  name: NewState
  nameWithType: StateChange<TState>.NewState
  fullName: R3dux.StateChange<TState>.NewState
  nameWithType.vb: StateChange(Of TState).NewState
  fullName.vb: R3dux.StateChange(Of TState).NewState
- uid: R3dux.StateChange`1.ElapsedMilliseconds*
  commentId: Overload:R3dux.StateChange`1.ElapsedMilliseconds
  href: R3dux.StateChange-1.html#R3dux_StateChange_1_ElapsedMilliseconds
  name: ElapsedMilliseconds
  nameWithType: StateChange<TState>.ElapsedMilliseconds
  fullName: R3dux.StateChange<TState>.ElapsedMilliseconds
  nameWithType.vb: StateChange(Of TState).ElapsedMilliseconds
  fullName.vb: R3dux.StateChange(Of TState).ElapsedMilliseconds
