### YamlMime:ManagedReference
items:
- uid: R3dux.Extensions.Operators.ReactiveSelectorExtensions
  commentId: T:R3dux.Extensions.Operators.ReactiveSelectorExtensions
  id: ReactiveSelectorExtensions
  parent: R3dux.Extensions.Operators
  children:
  - R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  - R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  - R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  langs:
  - csharp
  - vb
  name: ReactiveSelectorExtensions
  nameWithType: ReactiveSelectorExtensions
  fullName: R3dux.Extensions.Operators.ReactiveSelectorExtensions
  type: Class
  source:
    remote:
      path: src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: ReactiveSelectorExtensions
    path: ../src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
    startLine: 11
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Provides extension methods for working with observables.
  example: []
  syntax:
    content: public static class ReactiveSelectorExtensions
    content.vb: Public Module ReactiveSelectorExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  commentId: M:R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  id: SwitchSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.ReactiveSelectorExtensions
  langs:
  - csharp
  - vb
  name: SwitchSelect<TInput, TOutput>(Observable<TInput>, Func<TInput, Observable<TOutput>>)
  nameWithType: ReactiveSelectorExtensions.SwitchSelect<TInput, TOutput>(Observable<TInput>, Func<TInput, Observable<TOutput>>)
  fullName: R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect<TInput, TOutput>(R3.Observable<TInput>, System.Func<TInput, R3.Observable<TOutput>>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: SwitchSelect
    path: ../src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
    startLine: 21
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Projects each element of an observable sequence into a new observable sequence and then switches to the latest observable sequence.
  example: []
  syntax:
    content: public static Observable<TOutput> SwitchSelect<TInput, TOutput>(this Observable<TInput> source, Func<TInput, Observable<TOutput>> selector)
    parameters:
    - id: source
      type: R3.Observable{{TInput}}
      description: The source observable sequence.
    - id: selector
      type: System.Func{{TInput},R3.Observable{{TOutput}}}
      description: A transform function to apply to each element in the input sequence.
    typeParameters:
    - id: TInput
      description: The type of elements in the source observable sequence.
    - id: TOutput
      description: The type of elements in the projected observable sequences.
    return:
      type: R3.Observable{{TOutput}}
      description: An observable sequence whose elements are the result of invoking the transform function on each element of the source.
    content.vb: Public Shared Function SwitchSelect(Of TInput, TOutput)(source As Observable(Of TInput), selector As Func(Of TInput, Observable(Of TOutput))) As Observable(Of TOutput)
  overload: R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect*
  nameWithType.vb: ReactiveSelectorExtensions.SwitchSelect(Of TInput, TOutput)(Observable(Of TInput), Func(Of TInput, Observable(Of TOutput)))
  fullName.vb: R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect(Of TInput, TOutput)(R3.Observable(Of TInput), System.Func(Of TInput, R3.Observable(Of TOutput)))
  name.vb: SwitchSelect(Of TInput, TOutput)(Observable(Of TInput), Func(Of TInput, Observable(Of TOutput)))
- uid: R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  commentId: M:R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  id: ConcatSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.ReactiveSelectorExtensions
  langs:
  - csharp
  - vb
  name: ConcatSelect<TInput, TOutput>(Observable<TInput>, Func<TInput, Observable<TOutput>>)
  nameWithType: ReactiveSelectorExtensions.ConcatSelect<TInput, TOutput>(Observable<TInput>, Func<TInput, Observable<TOutput>>)
  fullName: R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect<TInput, TOutput>(R3.Observable<TInput>, System.Func<TInput, R3.Observable<TOutput>>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: ConcatSelect
    path: ../src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
    startLine: 36
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Projects each element of an observable sequence into a new observable sequence and concatenates the resulting observable sequences.
  example: []
  syntax:
    content: public static Observable<TOutput> ConcatSelect<TInput, TOutput>(this Observable<TInput> source, Func<TInput, Observable<TOutput>> selector)
    parameters:
    - id: source
      type: R3.Observable{{TInput}}
      description: The source observable sequence.
    - id: selector
      type: System.Func{{TInput},R3.Observable{{TOutput}}}
      description: A transform function to apply to each element in the input sequence.
    typeParameters:
    - id: TInput
      description: The type of elements in the source observable sequence.
    - id: TOutput
      description: The type of elements in the projected observable sequences.
    return:
      type: R3.Observable{{TOutput}}
      description: An observable sequence whose elements are the result of invoking the transform function on each element of the source and concatenating the resulting sequences.
    content.vb: Public Shared Function ConcatSelect(Of TInput, TOutput)(source As Observable(Of TInput), selector As Func(Of TInput, Observable(Of TOutput))) As Observable(Of TOutput)
  overload: R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect*
  nameWithType.vb: ReactiveSelectorExtensions.ConcatSelect(Of TInput, TOutput)(Observable(Of TInput), Func(Of TInput, Observable(Of TOutput)))
  fullName.vb: R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect(Of TInput, TOutput)(R3.Observable(Of TInput), System.Func(Of TInput, R3.Observable(Of TOutput)))
  name.vb: ConcatSelect(Of TInput, TOutput)(Observable(Of TInput), Func(Of TInput, Observable(Of TOutput)))
- uid: R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  commentId: M:R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  id: MergeSelect``2(R3.Observable{``0},System.Func{``0,R3.Observable{``1}})
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.ReactiveSelectorExtensions
  langs:
  - csharp
  - vb
  name: MergeSelect<TInput, TOutput>(Observable<TInput>, Func<TInput, Observable<TOutput>>)
  nameWithType: ReactiveSelectorExtensions.MergeSelect<TInput, TOutput>(Observable<TInput>, Func<TInput, Observable<TOutput>>)
  fullName: R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect<TInput, TOutput>(R3.Observable<TInput>, System.Func<TInput, R3.Observable<TOutput>>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: MergeSelect
    path: ../src/library/R3dux.Operators/ReactiveSelectorExtensions.cs
    startLine: 51
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Projects each element of an observable sequence into a new observable sequence and merges the resulting observable sequences.
  example: []
  syntax:
    content: public static Observable<TOutput> MergeSelect<TInput, TOutput>(this Observable<TInput> source, Func<TInput, Observable<TOutput>> selector)
    parameters:
    - id: source
      type: R3.Observable{{TInput}}
      description: The source observable sequence.
    - id: selector
      type: System.Func{{TInput},R3.Observable{{TOutput}}}
      description: A transform function to apply to each element in the input sequence.
    typeParameters:
    - id: TInput
      description: The type of elements in the source observable sequence.
    - id: TOutput
      description: The type of elements in the projected observable sequences.
    return:
      type: R3.Observable{{TOutput}}
      description: An observable sequence whose elements are the result of invoking the transform function on each element of the source and merging the resulting sequences.
    content.vb: Public Shared Function MergeSelect(Of TInput, TOutput)(source As Observable(Of TInput), selector As Func(Of TInput, Observable(Of TOutput))) As Observable(Of TOutput)
  overload: R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect*
  nameWithType.vb: ReactiveSelectorExtensions.MergeSelect(Of TInput, TOutput)(Observable(Of TInput), Func(Of TInput, Observable(Of TOutput)))
  fullName.vb: R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect(Of TInput, TOutput)(R3.Observable(Of TInput), System.Func(Of TInput, R3.Observable(Of TOutput)))
  name.vb: MergeSelect(Of TInput, TOutput)(Observable(Of TInput), Func(Of TInput, Observable(Of TOutput)))
references:
- uid: R3dux.Extensions.Operators
  commentId: N:R3dux.Extensions.Operators
  href: R3dux.html
  name: R3dux.Extensions.Operators
  nameWithType: R3dux.Extensions.Operators
  fullName: R3dux.Extensions.Operators
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Extensions
    name: Extensions
    href: R3dux.Extensions.html
  - name: .
  - uid: R3dux.Extensions.Operators
    name: Operators
    href: R3dux.Extensions.Operators.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Extensions
    name: Extensions
    href: R3dux.Extensions.html
  - name: .
  - uid: R3dux.Extensions.Operators
    name: Operators
    href: R3dux.Extensions.Operators.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect*
  commentId: Overload:R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect
  href: R3dux.Extensions.Operators.ReactiveSelectorExtensions.html#R3dux_Extensions_Operators_ReactiveSelectorExtensions_SwitchSelect__2_R3_Observable___0__System_Func___0_R3_Observable___1___
  name: SwitchSelect
  nameWithType: ReactiveSelectorExtensions.SwitchSelect
  fullName: R3dux.Extensions.Operators.ReactiveSelectorExtensions.SwitchSelect
- uid: R3.Observable{{TInput}}
  commentId: T:R3.Observable{``0}
  parent: R3
  definition: R3.Observable`1
  name: Observable<TInput>
  nameWithType: Observable<TInput>
  fullName: R3.Observable<TInput>
  nameWithType.vb: Observable(Of TInput)
  fullName.vb: R3.Observable(Of TInput)
  name.vb: Observable(Of TInput)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: TInput
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TInput
  - name: )
- uid: System.Func{{TInput},R3.Observable{{TOutput}}}
  commentId: T:System.Func{``0,R3.Observable{``1}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TInput, Observable<TOutput>>
  nameWithType: Func<TInput, Observable<TOutput>>
  fullName: System.Func<TInput, R3.Observable<TOutput>>
  nameWithType.vb: Func(Of TInput, Observable(Of TOutput))
  fullName.vb: System.Func(Of TInput, R3.Observable(Of TOutput))
  name.vb: Func(Of TInput, Observable(Of TOutput))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TInput
  - name: ','
  - name: " "
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: TOutput
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TInput
  - name: ','
  - name: " "
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: )
  - name: )
- uid: R3.Observable{{TOutput}}
  commentId: T:R3.Observable{``1}
  parent: R3
  definition: R3.Observable`1
  name: Observable<TOutput>
  nameWithType: Observable<TOutput>
  fullName: R3.Observable<TOutput>
  nameWithType.vb: Observable(Of TOutput)
  fullName.vb: R3.Observable(Of TOutput)
  name.vb: Observable(Of TOutput)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: TOutput
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: )
- uid: R3.Observable`1
  commentId: T:R3.Observable`1
  isExternal: true
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: R3.Observable<T>
  nameWithType.vb: Observable(Of T)
  fullName.vb: R3.Observable(Of T)
  name.vb: Observable(Of T)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3
  commentId: N:R3
  isExternal: true
  name: R3
  nameWithType: R3
  fullName: R3
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect*
  commentId: Overload:R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect
  href: R3dux.Extensions.Operators.ReactiveSelectorExtensions.html#R3dux_Extensions_Operators_ReactiveSelectorExtensions_ConcatSelect__2_R3_Observable___0__System_Func___0_R3_Observable___1___
  name: ConcatSelect
  nameWithType: ReactiveSelectorExtensions.ConcatSelect
  fullName: R3dux.Extensions.Operators.ReactiveSelectorExtensions.ConcatSelect
- uid: R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect*
  commentId: Overload:R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect
  href: R3dux.Extensions.Operators.ReactiveSelectorExtensions.html#R3dux_Extensions_Operators_ReactiveSelectorExtensions_MergeSelect__2_R3_Observable___0__System_Func___0_R3_Observable___1___
  name: MergeSelect
  nameWithType: ReactiveSelectorExtensions.MergeSelect
  fullName: R3dux.Extensions.Operators.ReactiveSelectorExtensions.MergeSelect
