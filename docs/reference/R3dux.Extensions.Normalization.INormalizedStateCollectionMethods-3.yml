### YamlMime:ManagedReference
items:
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  commentId: T:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  id: INormalizedStateCollectionMethods`3
  parent: R3dux.Extensions.Normalization
  children:
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddMany(System.Collections.Generic.IEnumerable{`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddOne(`1)
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.Map(System.Func{`1,`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.MapOne(`0,System.Func{`1,`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveAll
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany(System.Func{`1,System.Boolean})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveOne(`0)
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetAll(System.Collections.Generic.IEnumerable{`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetMany(System.Collections.Generic.IEnumerable{`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetOne(`1)
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Action{`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Func{`1,`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne(`0,System.Action{`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne(`0,System.Func{`1,`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertMany(System.Collections.Generic.IEnumerable{`1})
  - R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertOne(`1)
  langs:
  - csharp
  - vb
  name: INormalizedStateCollectionMethods<TKey, TEntity, TState>
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>
  type: Interface
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: INormalizedStateCollectionMethods
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 12
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Defines methods for managing a collection of entities within a normalized state.
  example: []
  syntax:
    content: 'public interface INormalizedStateCollectionMethods<in TKey, TEntity, out TState> where TKey : IEquatable<in TKey> where TEntity : IEntity<in TKey> where TState : NormalizedState<in TKey, TEntity, out TState>, new()'
    typeParameters:
    - id: TKey
      description: The type of the entity key.
    - id: TEntity
      description: The type of the entity.
    - id: TState
      description: The type of the state.
    content.vb: Public Interface INormalizedStateCollectionMethods(Of In TKey As IEquatable(Of In TKey), TEntity As IEntity(Of In TKey), Out TState As {NormalizedState(Of In TKey, TEntity, Out TState), New})
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState)
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState)
  name.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState)
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddOne(`1)
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddOne(`1)
  id: AddOne(`1)
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: AddOne(TEntity)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddOne(TEntity)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddOne(TEntity)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: AddOne
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 23
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Adds one entity to the collection.
  example: []
  syntax:
    content: TState AddOne(TEntity entity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: The entity to add.
    return:
      type: '{TState}'
      description: The new state with the entity added.
    content.vb: Function AddOne(entity As TEntity) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddOne*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The entity must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddOne(TEntity)
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddOne(TEntity)
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddMany(System.Collections.Generic.IEnumerable{`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddMany(System.Collections.Generic.IEnumerable{`1})
  id: AddMany(System.Collections.Generic.IEnumerable{`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: AddMany(IEnumerable<TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddMany(IEnumerable<TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddMany(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: AddMany
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 31
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Adds multiple entities to the collection.
  example: []
  syntax:
    content: TState AddMany(IEnumerable<TEntity> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The entities to add.
    return:
      type: '{TState}'
      description: The new state with the entities added.
    content.vb: Function AddMany(entities As IEnumerable(Of TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The entities collection must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddMany(IEnumerable(Of TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddMany(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: AddMany(IEnumerable(Of TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetAll(System.Collections.Generic.IEnumerable{`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetAll(System.Collections.Generic.IEnumerable{`1})
  id: SetAll(System.Collections.Generic.IEnumerable{`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: SetAll(IEnumerable<TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetAll(IEnumerable<TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetAll(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: SetAll
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 39
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Replaces the current collection with the provided collection.
  example: []
  syntax:
    content: TState SetAll(IEnumerable<TEntity> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The entities to set.
    return:
      type: '{TState}'
      description: The new state with the entities set.
    content.vb: Function SetAll(entities As IEnumerable(Of TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The entities collection must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetAll(IEnumerable(Of TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetAll(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: SetAll(IEnumerable(Of TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetOne(`1)
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetOne(`1)
  id: SetOne(`1)
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: SetOne(TEntity)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetOne(TEntity)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetOne(TEntity)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: SetOne
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 47
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Adds or replaces one entity in the collection.
  example: []
  syntax:
    content: TState SetOne(TEntity entity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: The entity to set.
    return:
      type: '{TState}'
      description: The new state with the entity set.
    content.vb: Function SetOne(entity As TEntity) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetOne*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The entity must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetOne(TEntity)
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetOne(TEntity)
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetMany(System.Collections.Generic.IEnumerable{`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetMany(System.Collections.Generic.IEnumerable{`1})
  id: SetMany(System.Collections.Generic.IEnumerable{`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: SetMany(IEnumerable<TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetMany(IEnumerable<TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetMany(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: SetMany
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 55
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Adds or replaces multiple entities in the collection.
  example: []
  syntax:
    content: TState SetMany(IEnumerable<TEntity> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The entities to set.
    return:
      type: '{TState}'
      description: The new state with the entities set.
    content.vb: Function SetMany(entities As IEnumerable(Of TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The entities collection must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetMany(IEnumerable(Of TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetMany(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: SetMany(IEnumerable(Of TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveOne(`0)
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveOne(`0)
  id: RemoveOne(`0)
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: RemoveOne(TKey)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveOne(TKey)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveOne(TKey)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: RemoveOne
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 63
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Removes one entity from the collection.
  example: []
  syntax:
    content: TState RemoveOne(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the entity to remove.
    return:
      type: '{TState}'
      description: The new state with the entity removed.
    content.vb: Function RemoveOne(key As TKey) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveOne*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The key must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveOne(TKey)
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveOne(TKey)
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany(System.Collections.Generic.IEnumerable{`0})
  id: RemoveMany(System.Collections.Generic.IEnumerable{`0})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: RemoveMany(IEnumerable<TKey>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveMany(IEnumerable<TKey>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveMany(System.Collections.Generic.IEnumerable<TKey>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: RemoveMany
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 71
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Removes multiple entities from the collection by id.
  example: []
  syntax:
    content: TState RemoveMany(IEnumerable<in TKey> keys)
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{{TKey}}
      description: The keys of the entities to remove.
    return:
      type: '{TState}'
      description: The new state with the entities removed.
    content.vb: Function RemoveMany(keys As IEnumerable(Of In TKey)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The keys collection must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveMany(IEnumerable(Of TKey))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveMany(System.Collections.Generic.IEnumerable(Of TKey))
  name.vb: RemoveMany(IEnumerable(Of TKey))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany(System.Func{`1,System.Boolean})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany(System.Func{`1,System.Boolean})
  id: RemoveMany(System.Func{`1,System.Boolean})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: RemoveMany(Func<TEntity, bool>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveMany(Func<TEntity, bool>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveMany(System.Func<TEntity, bool>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: RemoveMany
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 79
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Removes multiple entities from the collection by a predicate.
  example: []
  syntax:
    content: TState RemoveMany(Func<TEntity, bool> predicate)
    parameters:
    - id: predicate
      type: System.Func{{TEntity},System.Boolean}
      description: The predicate to filter entities to remove.
    return:
      type: '{TState}'
      description: The new state with the entities removed.
    content.vb: Function RemoveMany(predicate As Func(Of TEntity, Boolean)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The predicate must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveMany(Func(Of TEntity, Boolean))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveMany(System.Func(Of TEntity, Boolean))
  name.vb: RemoveMany(Func(Of TEntity, Boolean))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveAll
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveAll
  id: RemoveAll
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: RemoveAll()
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveAll()
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveAll()
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: RemoveAll
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 85
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Clears the entity collection.
  example: []
  syntax:
    content: TState RemoveAll()
    return:
      type: '{TState}'
      description: The new state with the collection cleared.
    content.vb: Function RemoveAll() As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveAll*
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveAll()
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveAll()
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne(`0,System.Action{`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne(`0,System.Action{`1})
  id: UpdateOne(`0,System.Action{`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: UpdateOne(TKey, Action<TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateOne(TKey, Action<TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateOne(TKey, System.Action<TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: UpdateOne
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 94
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Updates one entity in the collection. Supports partial updates.
  example: []
  syntax:
    content: TState UpdateOne(TKey key, Action<TEntity> update)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the entity to update.
    - id: update
      type: System.Action{{TEntity}}
      description: The update action to apply to the entity.
    return:
      type: '{TState}'
      description: The new state with the entity updated.
    content.vb: Function UpdateOne(key As TKey, update As Action(Of TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The key and update action must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateOne(TKey, Action(Of TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateOne(TKey, System.Action(Of TEntity))
  name.vb: UpdateOne(TKey, Action(Of TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne(`0,System.Func{`1,`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne(`0,System.Func{`1,`1})
  id: UpdateOne(`0,System.Func{`1,`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: UpdateOne(TKey, Func<TEntity, TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateOne(TKey, Func<TEntity, TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateOne(TKey, System.Func<TEntity, TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: UpdateOne
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 103
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Updates one entity in the collection. Supports partial updates.
  example: []
  syntax:
    content: TState UpdateOne(TKey key, Func<TEntity, TEntity> update)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the entity to update.
    - id: update
      type: System.Func{{TEntity},{TEntity}}
      description: The update function to apply to the entity.
    return:
      type: '{TState}'
      description: The new state with the entity updated.
    content.vb: Function UpdateOne(key As TKey, update As Func(Of TEntity, TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The key and update action must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateOne(TKey, Func(Of TEntity, TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateOne(TKey, System.Func(Of TEntity, TEntity))
  name.vb: UpdateOne(TKey, Func(Of TEntity, TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Action{`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Action{`1})
  id: UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Action{`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: UpdateMany(IEnumerable<TKey>, Action<TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateMany(IEnumerable<TKey>, Action<TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateMany(System.Collections.Generic.IEnumerable<TKey>, System.Action<TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: UpdateMany
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 112
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Updates multiple entities in the collection. Supports partial updates.
  example: []
  syntax:
    content: TState UpdateMany(IEnumerable<in TKey> keys, Action<TEntity> update)
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{{TKey}}
      description: The keys of the entities to update.
    - id: update
      type: System.Action{{TEntity}}
      description: The update action to apply to the entities.
    return:
      type: '{TState}'
      description: The new state with the entities updated.
    content.vb: Function UpdateMany(keys As IEnumerable(Of In TKey), update As Action(Of TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The keys collection and update action must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateMany(IEnumerable(Of TKey), Action(Of TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateMany(System.Collections.Generic.IEnumerable(Of TKey), System.Action(Of TEntity))
  name.vb: UpdateMany(IEnumerable(Of TKey), Action(Of TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Func{`1,`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Func{`1,`1})
  id: UpdateMany(System.Collections.Generic.IEnumerable{`0},System.Func{`1,`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: UpdateMany(IEnumerable<TKey>, Func<TEntity, TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateMany(IEnumerable<TKey>, Func<TEntity, TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateMany(System.Collections.Generic.IEnumerable<TKey>, System.Func<TEntity, TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: UpdateMany
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 121
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Updates multiple entities in the collection. Supports partial updates.
  example: []
  syntax:
    content: TState UpdateMany(IEnumerable<in TKey> keys, Func<TEntity, TEntity> update)
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{{TKey}}
      description: The keys of the entities to update.
    - id: update
      type: System.Func{{TEntity},{TEntity}}
      description: The update action to apply to the entities.
    return:
      type: '{TState}'
      description: The new state with the entities updated.
    content.vb: Function UpdateMany(keys As IEnumerable(Of In TKey), update As Func(Of TEntity, TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The keys collection and update action must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateMany(IEnumerable(Of TKey), Func(Of TEntity, TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateMany(System.Collections.Generic.IEnumerable(Of TKey), System.Func(Of TEntity, TEntity))
  name.vb: UpdateMany(IEnumerable(Of TKey), Func(Of TEntity, TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertOne(`1)
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertOne(`1)
  id: UpsertOne(`1)
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: UpsertOne(TEntity)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertOne(TEntity)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertOne(TEntity)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: UpsertOne
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 129
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Adds or updates one entity in the collection.
  example: []
  syntax:
    content: TState UpsertOne(TEntity entity)
    parameters:
    - id: entity
      type: '{TEntity}'
      description: The entity to upsert.
    return:
      type: '{TState}'
      description: The new state with the entity upserted.
    content.vb: Function UpsertOne(entity As TEntity) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertOne*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The entity must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertOne(TEntity)
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertOne(TEntity)
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertMany(System.Collections.Generic.IEnumerable{`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertMany(System.Collections.Generic.IEnumerable{`1})
  id: UpsertMany(System.Collections.Generic.IEnumerable{`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: UpsertMany(IEnumerable<TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertMany(IEnumerable<TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertMany(System.Collections.Generic.IEnumerable<TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: UpsertMany
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 137
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Adds or updates multiple entities in the collection.
  example: []
  syntax:
    content: TState UpsertMany(IEnumerable<TEntity> entities)
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{{TEntity}}
      description: The entities to upsert.
    return:
      type: '{TState}'
      description: The new state with the entities upserted.
    content.vb: Function UpsertMany(entities As IEnumerable(Of TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertMany*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The entities collection must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertMany(IEnumerable(Of TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertMany(System.Collections.Generic.IEnumerable(Of TEntity))
  name.vb: UpsertMany(IEnumerable(Of TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.MapOne(`0,System.Func{`1,`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.MapOne(`0,System.Func{`1,`1})
  id: MapOne(`0,System.Func{`1,`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: MapOne(TKey, Func<TEntity, TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.MapOne(TKey, Func<TEntity, TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.MapOne(TKey, System.Func<TEntity, TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: MapOne
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 146
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Updates one entity in the collection by defining a map function.
  example: []
  syntax:
    content: TState MapOne(TKey key, Func<TEntity, TEntity> map)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the entity to map.
    - id: map
      type: System.Func{{TEntity},{TEntity}}
      description: The map function to apply to the entity.
    return:
      type: '{TState}'
      description: The new state with the entity mapped.
    content.vb: Function MapOne(key As TKey, map As Func(Of TEntity, TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.MapOne*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The key and map function must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).MapOne(TKey, Func(Of TEntity, TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).MapOne(TKey, System.Func(Of TEntity, TEntity))
  name.vb: MapOne(TKey, Func(Of TEntity, TEntity))
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.Map(System.Func{`1,`1})
  commentId: M:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.Map(System.Func{`1,`1})
  id: Map(System.Func{`1,`1})
  parent: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3
  langs:
  - csharp
  - vb
  name: Map(Func<TEntity, TEntity>)
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.Map(Func<TEntity, TEntity>)
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.Map(System.Func<TEntity, TEntity>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: Map
    path: ../src/library/R3dux.Normalization/INormalizedStateCollectionMethods.cs
    startLine: 154
  assemblies:
  - R3dux.Normalization
  namespace: R3dux.Extensions.Normalization
  summary: Updates multiple entities in the collection by defining a map function.
  example: []
  syntax:
    content: TState Map(Func<TEntity, TEntity> map)
    parameters:
    - id: map
      type: System.Func{{TEntity},{TEntity}}
      description: The map function to apply to the entities.
    return:
      type: '{TState}'
      description: The new state with the entities mapped.
    content.vb: Function Map(map As Func(Of TEntity, TEntity)) As TState
  overload: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.Map*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The map function must not be null.
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).Map(Func(Of TEntity, TEntity))
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).Map(System.Func(Of TEntity, TEntity))
  name.vb: Map(Func(Of TEntity, TEntity))
references:
- uid: R3dux.Extensions.Normalization
  commentId: N:R3dux.Extensions.Normalization
  href: R3dux.html
  name: R3dux.Extensions.Normalization
  nameWithType: R3dux.Extensions.Normalization
  fullName: R3dux.Extensions.Normalization
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Extensions
    name: Extensions
    href: R3dux.Extensions.html
  - name: .
  - uid: R3dux.Extensions.Normalization
    name: Normalization
    href: R3dux.Extensions.Normalization.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Extensions
    name: Extensions
    href: R3dux.Extensions.html
  - name: .
  - uid: R3dux.Extensions.Normalization
    name: Normalization
    href: R3dux.Extensions.Normalization.html
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddOne*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddOne
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_AddOne__1_
  name: AddOne
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddOne
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddOne
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddOne
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddOne
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddMany*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.AddMany
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_AddMany_System_Collections_Generic_IEnumerable__1__
  name: AddMany
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddMany
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.AddMany
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddMany
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).AddMany
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetAll*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetAll
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_SetAll_System_Collections_Generic_IEnumerable__1__
  name: SetAll
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetAll
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetAll
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetAll
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetAll
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetOne*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetOne
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_SetOne__1_
  name: SetOne
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetOne
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetOne
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetOne
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetOne
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetMany*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.SetMany
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_SetMany_System_Collections_Generic_IEnumerable__1__
  name: SetMany
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetMany
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.SetMany
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetMany
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).SetMany
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveOne*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveOne
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_RemoveOne__0_
  name: RemoveOne
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveOne
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveOne
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveOne
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveOne
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveMany
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_RemoveMany_System_Collections_Generic_IEnumerable__0__
  name: RemoveMany
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveMany
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveMany
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveMany
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveMany
- uid: System.Collections.Generic.IEnumerable{{TKey}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TKey>
  nameWithType: IEnumerable<TKey>
  fullName: System.Collections.Generic.IEnumerable<TKey>
  nameWithType.vb: IEnumerable(Of TKey)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TKey)
  name.vb: IEnumerable(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Func{{TEntity},System.Boolean}
  commentId: T:System.Func{`1,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TEntity, bool>
  nameWithType: Func<TEntity, bool>
  fullName: System.Func<TEntity, bool>
  nameWithType.vb: Func(Of TEntity, Boolean)
  fullName.vb: System.Func(Of TEntity, Boolean)
  name.vb: Func(Of TEntity, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveAll*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.RemoveAll
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_RemoveAll
  name: RemoveAll
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveAll
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.RemoveAll
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveAll
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).RemoveAll
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateOne
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_UpdateOne__0_System_Action__1__
  name: UpdateOne
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateOne
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateOne
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateOne
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateOne
- uid: System.Action{{TEntity}}
  commentId: T:System.Action{`1}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<TEntity>
  nameWithType: Action<TEntity>
  fullName: System.Action<TEntity>
  nameWithType.vb: Action(Of TEntity)
  fullName.vb: System.Action(Of TEntity)
  name.vb: Action(Of TEntity)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{{TEntity},{TEntity}}
  commentId: T:System.Func{`1,`1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TEntity, TEntity>
  nameWithType: Func<TEntity, TEntity>
  fullName: System.Func<TEntity, TEntity>
  nameWithType.vb: Func(Of TEntity, TEntity)
  fullName.vb: System.Func(Of TEntity, TEntity)
  name.vb: Func(Of TEntity, TEntity)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TEntity
  - name: ','
  - name: " "
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: ','
  - name: " "
  - name: TEntity
  - name: )
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpdateMany
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_UpdateMany_System_Collections_Generic_IEnumerable__0__System_Action__1__
  name: UpdateMany
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateMany
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpdateMany
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateMany
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpdateMany
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertOne*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertOne
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_UpsertOne__1_
  name: UpsertOne
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertOne
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertOne
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertOne
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertOne
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertMany*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.UpsertMany
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_UpsertMany_System_Collections_Generic_IEnumerable__1__
  name: UpsertMany
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertMany
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.UpsertMany
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertMany
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).UpsertMany
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.MapOne*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.MapOne
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_MapOne__0_System_Func__1__1__
  name: MapOne
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.MapOne
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.MapOne
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).MapOne
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).MapOne
- uid: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.Map*
  commentId: Overload:R3dux.Extensions.Normalization.INormalizedStateCollectionMethods`3.Map
  href: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods-3.html#R3dux_Extensions_Normalization_INormalizedStateCollectionMethods_3_Map_System_Func__1__1__
  name: Map
  nameWithType: INormalizedStateCollectionMethods<TKey, TEntity, TState>.Map
  fullName: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods<TKey, TEntity, TState>.Map
  nameWithType.vb: INormalizedStateCollectionMethods(Of TKey, TEntity, TState).Map
  fullName.vb: R3dux.Extensions.Normalization.INormalizedStateCollectionMethods(Of TKey, TEntity, TState).Map
