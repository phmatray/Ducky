### YamlMime:ManagedReference
items:
- uid: R3dux.Abstractions.ISlice`1
  commentId: T:R3dux.Abstractions.ISlice`1
  id: ISlice`1
  parent: R3dux.Abstractions
  children:
  - R3dux.Abstractions.ISlice`1.Reducers
  - R3dux.Abstractions.ISlice`1.State
  langs:
  - csharp
  - vb
  name: ISlice<TState>
  nameWithType: ISlice<TState>
  fullName: R3dux.Abstractions.ISlice<TState>
  type: Interface
  source:
    remote:
      path: src/library/R3dux.Abstractions/ISlice{TState}.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: ISlice
    path: ../src/library/R3dux.Abstractions/ISlice{TState}.cs
    startLine: 12
  assemblies:
  - R3dux.Abstractions
  namespace: R3dux.Abstractions
  summary: Represents a strongly-typed state slice with state management and reducers.
  example: []
  syntax:
    content: 'public interface ISlice<TState> : ISlice'
    typeParameters:
    - id: TState
      description: The type of the state managed by this slice.
    content.vb: Public Interface ISlice(Of TState) Inherits ISlice
  inheritedMembers:
  - R3dux.Abstractions.ISlice.StateUpdated
  - R3dux.Abstractions.ISlice.GetKey
  - R3dux.Abstractions.ISlice.GetStateType
  - R3dux.Abstractions.ISlice.GetState
  - R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  nameWithType.vb: ISlice(Of TState)
  fullName.vb: R3dux.Abstractions.ISlice(Of TState)
  name.vb: ISlice(Of TState)
- uid: R3dux.Abstractions.ISlice`1.State
  commentId: P:R3dux.Abstractions.ISlice`1.State
  id: State
  parent: R3dux.Abstractions.ISlice`1
  langs:
  - csharp
  - vb
  name: State
  nameWithType: ISlice<TState>.State
  fullName: R3dux.Abstractions.ISlice<TState>.State
  type: Property
  source:
    remote:
      path: src/library/R3dux.Abstractions/ISlice{TState}.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: State
    path: ../src/library/R3dux.Abstractions/ISlice{TState}.cs
    startLine: 18
  assemblies:
  - R3dux.Abstractions
  namespace: R3dux.Abstractions
  summary: Gets an observable sequence that produces the state of this slice.
  example: []
  syntax:
    content: Observable<TState> State { get; }
    parameters: []
    return:
      type: R3.Observable{{TState}}
      description: The observable sequence of the state.
    content.vb: ReadOnly Property State As Observable(Of TState)
  overload: R3dux.Abstractions.ISlice`1.State*
  nameWithType.vb: ISlice(Of TState).State
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).State
- uid: R3dux.Abstractions.ISlice`1.Reducers
  commentId: P:R3dux.Abstractions.ISlice`1.Reducers
  id: Reducers
  parent: R3dux.Abstractions.ISlice`1
  langs:
  - csharp
  - vb
  name: Reducers
  nameWithType: ISlice<TState>.Reducers
  fullName: R3dux.Abstractions.ISlice<TState>.Reducers
  type: Property
  source:
    remote:
      path: src/library/R3dux.Abstractions/ISlice{TState}.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: Reducers
    path: ../src/library/R3dux.Abstractions/ISlice{TState}.cs
    startLine: 24
  assemblies:
  - R3dux.Abstractions
  namespace: R3dux.Abstractions
  summary: Gets the collection of reducers for this state slice.
  example: []
  syntax:
    content: Dictionary<Type, Func<TState, IAction, TState>> Reducers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Func{{TState},R3dux.Abstractions.IAction,{TState}}}
      description: The collection of reducers.
    content.vb: ReadOnly Property Reducers As Dictionary(Of Type, Func(Of TState, IAction, TState))
  overload: R3dux.Abstractions.ISlice`1.Reducers*
  nameWithType.vb: ISlice(Of TState).Reducers
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).Reducers
references:
- uid: R3dux.Abstractions
  commentId: N:R3dux.Abstractions
  href: R3dux.html
  name: R3dux.Abstractions
  nameWithType: R3dux.Abstractions
  fullName: R3dux.Abstractions
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
- uid: R3dux.Abstractions.ISlice.StateUpdated
  commentId: P:R3dux.Abstractions.ISlice.StateUpdated
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_StateUpdated
  name: StateUpdated
  nameWithType: ISlice.StateUpdated
  fullName: R3dux.Abstractions.ISlice.StateUpdated
- uid: R3dux.Abstractions.ISlice.GetKey
  commentId: M:R3dux.Abstractions.ISlice.GetKey
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetKey
  name: GetKey()
  nameWithType: ISlice.GetKey()
  fullName: R3dux.Abstractions.ISlice.GetKey()
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.GetKey
    name: GetKey
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetKey
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.GetKey
    name: GetKey
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetKey
  - name: (
  - name: )
- uid: R3dux.Abstractions.ISlice.GetStateType
  commentId: M:R3dux.Abstractions.ISlice.GetStateType
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetStateType
  name: GetStateType()
  nameWithType: ISlice.GetStateType()
  fullName: R3dux.Abstractions.ISlice.GetStateType()
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.GetStateType
    name: GetStateType
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetStateType
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.GetStateType
    name: GetStateType
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetStateType
  - name: (
  - name: )
- uid: R3dux.Abstractions.ISlice.GetState
  commentId: M:R3dux.Abstractions.ISlice.GetState
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetState
  name: GetState()
  nameWithType: ISlice.GetState()
  fullName: R3dux.Abstractions.ISlice.GetState()
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.GetState
    name: GetState
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetState
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.GetState
    name: GetState
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetState
  - name: (
  - name: )
- uid: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  commentId: M:R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_OnDispatch_R3dux_Abstractions_IAction_
  name: OnDispatch(IAction)
  nameWithType: ISlice.OnDispatch(IAction)
  fullName: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
    name: OnDispatch
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_OnDispatch_R3dux_Abstractions_IAction_
  - name: (
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
    name: OnDispatch
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_OnDispatch_R3dux_Abstractions_IAction_
  - name: (
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
- uid: R3dux.Abstractions.ISlice
  commentId: T:R3dux.Abstractions.ISlice
  parent: R3dux.Abstractions
  href: R3dux.Abstractions.ISlice.html
  name: ISlice
  nameWithType: ISlice
  fullName: R3dux.Abstractions.ISlice
- uid: R3dux.Abstractions.ISlice`1.State*
  commentId: Overload:R3dux.Abstractions.ISlice`1.State
  href: R3dux.Abstractions.ISlice-1.html#R3dux_Abstractions_ISlice_1_State
  name: State
  nameWithType: ISlice<TState>.State
  fullName: R3dux.Abstractions.ISlice<TState>.State
  nameWithType.vb: ISlice(Of TState).State
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).State
- uid: R3.Observable{{TState}}
  commentId: T:R3.Observable{`0}
  parent: R3
  definition: R3.Observable`1
  name: Observable<TState>
  nameWithType: Observable<TState>
  fullName: R3.Observable<TState>
  nameWithType.vb: Observable(Of TState)
  fullName.vb: R3.Observable(Of TState)
  name.vb: Observable(Of TState)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: R3.Observable`1
  commentId: T:R3.Observable`1
  isExternal: true
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: R3.Observable<T>
  nameWithType.vb: Observable(Of T)
  fullName.vb: R3.Observable(Of T)
  name.vb: Observable(Of T)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3
  commentId: N:R3
  isExternal: true
  name: R3
  nameWithType: R3
  fullName: R3
- uid: R3dux.Abstractions.ISlice`1.Reducers*
  commentId: Overload:R3dux.Abstractions.ISlice`1.Reducers
  href: R3dux.Abstractions.ISlice-1.html#R3dux_Abstractions_ISlice_1_Reducers
  name: Reducers
  nameWithType: ISlice<TState>.Reducers
  fullName: R3dux.Abstractions.ISlice<TState>.Reducers
  nameWithType.vb: ISlice(Of TState).Reducers
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).Reducers
- uid: System.Collections.Generic.Dictionary{System.Type,System.Func{{TState},R3dux.Abstractions.IAction,{TState}}}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,System.Func{`0,R3dux.Abstractions.IAction,`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Type, Func<TState, IAction, TState>>
  nameWithType: Dictionary<Type, Func<TState, IAction, TState>>
  fullName: System.Collections.Generic.Dictionary<System.Type, System.Func<TState, R3dux.Abstractions.IAction, TState>>
  nameWithType.vb: Dictionary(Of Type, Func(Of TState, IAction, TState))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, System.Func(Of TState, R3dux.Abstractions.IAction, TState))
  name.vb: Dictionary(Of Type, Func(Of TState, IAction, TState))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: ','
  - name: " "
  - name: TState
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: ','
  - name: " "
  - name: TState
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
