### YamlMime:ManagedReference
items:
- uid: R3dux.Abstractions.IEffect
  commentId: T:R3dux.Abstractions.IEffect
  id: IEffect
  parent: R3dux.Abstractions
  children:
  - R3dux.Abstractions.IEffect.GetAssemblyName
  - R3dux.Abstractions.IEffect.GetKey
  - R3dux.Abstractions.IEffect.Handle(R3.Observable{R3dux.Abstractions.IAction},R3.Observable{R3dux.Abstractions.IRootState})
  langs:
  - csharp
  - vb
  name: IEffect
  nameWithType: IEffect
  fullName: R3dux.Abstractions.IEffect
  type: Interface
  source:
    remote:
      path: src/library/R3dux.Abstractions/IEffect.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: IEffect
    path: ../src/library/R3dux.Abstractions/IEffect.cs
    startLine: 11
  assemblies:
  - R3dux.Abstractions
  namespace: R3dux.Abstractions
  summary: Represents an effect that handles a stream of actions and interacts with the store's state.
  example: []
  syntax:
    content: public interface IEffect
    content.vb: Public Interface IEffect
- uid: R3dux.Abstractions.IEffect.GetKey
  commentId: M:R3dux.Abstractions.IEffect.GetKey
  id: GetKey
  parent: R3dux.Abstractions.IEffect
  langs:
  - csharp
  - vb
  name: GetKey()
  nameWithType: IEffect.GetKey()
  fullName: R3dux.Abstractions.IEffect.GetKey()
  type: Method
  source:
    remote:
      path: src/library/R3dux.Abstractions/IEffect.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: GetKey
    path: ../src/library/R3dux.Abstractions/IEffect.cs
    startLine: 17
  assemblies:
  - R3dux.Abstractions
  namespace: R3dux.Abstractions
  summary: Gets the key that identifies the effect.
  example: []
  syntax:
    content: string GetKey()
    return:
      type: System.String
      description: The key that identifies the effect.
    content.vb: Function GetKey() As String
  overload: R3dux.Abstractions.IEffect.GetKey*
- uid: R3dux.Abstractions.IEffect.GetAssemblyName
  commentId: M:R3dux.Abstractions.IEffect.GetAssemblyName
  id: GetAssemblyName
  parent: R3dux.Abstractions.IEffect
  langs:
  - csharp
  - vb
  name: GetAssemblyName()
  nameWithType: IEffect.GetAssemblyName()
  fullName: R3dux.Abstractions.IEffect.GetAssemblyName()
  type: Method
  source:
    remote:
      path: src/library/R3dux.Abstractions/IEffect.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: GetAssemblyName
    path: ../src/library/R3dux.Abstractions/IEffect.cs
    startLine: 23
  assemblies:
  - R3dux.Abstractions
  namespace: R3dux.Abstractions
  summary: Gets the assembly-qualified name of the effect.
  example: []
  syntax:
    content: string GetAssemblyName()
    return:
      type: System.String
      description: The assembly-qualified name of the effect.
    content.vb: Function GetAssemblyName() As String
  overload: R3dux.Abstractions.IEffect.GetAssemblyName*
- uid: R3dux.Abstractions.IEffect.Handle(R3.Observable{R3dux.Abstractions.IAction},R3.Observable{R3dux.Abstractions.IRootState})
  commentId: M:R3dux.Abstractions.IEffect.Handle(R3.Observable{R3dux.Abstractions.IAction},R3.Observable{R3dux.Abstractions.IRootState})
  id: Handle(R3.Observable{R3dux.Abstractions.IAction},R3.Observable{R3dux.Abstractions.IRootState})
  parent: R3dux.Abstractions.IEffect
  langs:
  - csharp
  - vb
  name: Handle(Observable<IAction>, Observable<IRootState>)
  nameWithType: IEffect.Handle(Observable<IAction>, Observable<IRootState>)
  fullName: R3dux.Abstractions.IEffect.Handle(R3.Observable<R3dux.Abstractions.IAction>, R3.Observable<R3dux.Abstractions.IRootState>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Abstractions/IEffect.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: Handle
    path: ../src/library/R3dux.Abstractions/IEffect.cs
    startLine: 31
  assemblies:
  - R3dux.Abstractions
  namespace: R3dux.Abstractions
  summary: Handles a stream of actions and produces a stream of resulting actions.
  example: []
  syntax:
    content: Observable<IAction> Handle(Observable<IAction> actions, Observable<IRootState> rootState)
    parameters:
    - id: actions
      type: R3.Observable{R3dux.Abstractions.IAction}
      description: The source observable sequence of actions.
    - id: rootState
      type: R3.Observable{R3dux.Abstractions.IRootState}
      description: The source observable sequence of the root state.
    return:
      type: R3.Observable{R3dux.Abstractions.IAction}
      description: An observable sequence of resulting actions.
    content.vb: Function Handle(actions As Observable(Of IAction), rootState As Observable(Of IRootState)) As Observable(Of IAction)
  overload: R3dux.Abstractions.IEffect.Handle*
  nameWithType.vb: IEffect.Handle(Observable(Of IAction), Observable(Of IRootState))
  fullName.vb: R3dux.Abstractions.IEffect.Handle(R3.Observable(Of R3dux.Abstractions.IAction), R3.Observable(Of R3dux.Abstractions.IRootState))
  name.vb: Handle(Observable(Of IAction), Observable(Of IRootState))
references:
- uid: R3dux.Abstractions
  commentId: N:R3dux.Abstractions
  href: R3dux.html
  name: R3dux.Abstractions
  nameWithType: R3dux.Abstractions
  fullName: R3dux.Abstractions
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
- uid: R3dux.Abstractions.IEffect.GetKey*
  commentId: Overload:R3dux.Abstractions.IEffect.GetKey
  href: R3dux.Abstractions.IEffect.html#R3dux_Abstractions_IEffect_GetKey
  name: GetKey
  nameWithType: IEffect.GetKey
  fullName: R3dux.Abstractions.IEffect.GetKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: R3dux.Abstractions.IEffect.GetAssemblyName*
  commentId: Overload:R3dux.Abstractions.IEffect.GetAssemblyName
  href: R3dux.Abstractions.IEffect.html#R3dux_Abstractions_IEffect_GetAssemblyName
  name: GetAssemblyName
  nameWithType: IEffect.GetAssemblyName
  fullName: R3dux.Abstractions.IEffect.GetAssemblyName
- uid: R3dux.Abstractions.IEffect.Handle*
  commentId: Overload:R3dux.Abstractions.IEffect.Handle
  href: R3dux.Abstractions.IEffect.html#R3dux_Abstractions_IEffect_Handle_R3_Observable_R3dux_Abstractions_IAction__R3_Observable_R3dux_Abstractions_IRootState__
  name: Handle
  nameWithType: IEffect.Handle
  fullName: R3dux.Abstractions.IEffect.Handle
- uid: R3.Observable{R3dux.Abstractions.IAction}
  commentId: T:R3.Observable{R3dux.Abstractions.IAction}
  parent: R3
  definition: R3.Observable`1
  href: R3dux.Abstractions.IAction.html
  name: Observable<IAction>
  nameWithType: Observable<IAction>
  fullName: R3.Observable<R3dux.Abstractions.IAction>
  nameWithType.vb: Observable(Of IAction)
  fullName.vb: R3.Observable(Of R3dux.Abstractions.IAction)
  name.vb: Observable(Of IAction)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
- uid: R3.Observable{R3dux.Abstractions.IRootState}
  commentId: T:R3.Observable{R3dux.Abstractions.IRootState}
  parent: R3
  definition: R3.Observable`1
  href: R3dux.Abstractions.IRootState.html
  name: Observable<IRootState>
  nameWithType: Observable<IRootState>
  fullName: R3.Observable<R3dux.Abstractions.IRootState>
  nameWithType.vb: Observable(Of IRootState)
  fullName.vb: R3.Observable(Of R3dux.Abstractions.IRootState)
  name.vb: Observable(Of IRootState)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - uid: R3dux.Abstractions.IRootState
    name: IRootState
    href: R3dux.Abstractions.IRootState.html
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.Abstractions.IRootState
    name: IRootState
    href: R3dux.Abstractions.IRootState.html
  - name: )
- uid: R3.Observable`1
  commentId: T:R3.Observable`1
  isExternal: true
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: R3.Observable<T>
  nameWithType.vb: Observable(Of T)
  fullName.vb: R3.Observable(Of T)
  name.vb: Observable(Of T)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3
  commentId: N:R3
  isExternal: true
  name: R3
  nameWithType: R3
  fullName: R3
