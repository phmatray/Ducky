### YamlMime:ManagedReference
items:
- uid: R3dux.Extensions.Operators.CustomOperators
  commentId: T:R3dux.Extensions.Operators.CustomOperators
  id: CustomOperators
  parent: R3dux.Extensions.Operators
  children:
  - R3dux.Extensions.Operators.CustomOperators.CatchAction``1(R3.Observable{``0},System.Func{System.Exception,``0})
  - R3dux.Extensions.Operators.CustomOperators.InvokeService``2(R3.Observable{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Func{``1,R3dux.Abstractions.IAction},System.Func{System.Exception,R3dux.Abstractions.IAction})
  - R3dux.Extensions.Operators.CustomOperators.LogMessage``1(R3.Observable{``0},System.String)
  - R3dux.Extensions.Operators.CustomOperators.OfType``1(R3.Observable{R3dux.Abstractions.IAction})
  - R3dux.Extensions.Operators.CustomOperators.SelectAction``2(R3.Observable{``0},System.Func{``0,``1})
  - R3dux.Extensions.Operators.CustomOperators.WithSliceState``2(R3.Observable{``1},R3.Observable{R3dux.Abstractions.IRootState},System.String)
  langs:
  - csharp
  - vb
  name: CustomOperators
  nameWithType: CustomOperators
  fullName: R3dux.Extensions.Operators.CustomOperators
  type: Class
  source:
    remote:
      path: src/library/R3dux.Operators/CustomOperators.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: CustomOperators
    path: ../src/library/R3dux.Operators/CustomOperators.cs
    startLine: 12
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Provides custom operators for working with observable sequences in the R3dux application.
  example: []
  syntax:
    content: public static class CustomOperators
    content.vb: Public Module CustomOperators
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: R3dux.Extensions.Operators.CustomOperators.OfType``1(R3.Observable{R3dux.Abstractions.IAction})
  commentId: M:R3dux.Extensions.Operators.CustomOperators.OfType``1(R3.Observable{R3dux.Abstractions.IAction})
  id: OfType``1(R3.Observable{R3dux.Abstractions.IAction})
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.CustomOperators
  langs:
  - csharp
  - vb
  name: OfType<TAction>(Observable<IAction>)
  nameWithType: CustomOperators.OfType<TAction>(Observable<IAction>)
  fullName: R3dux.Extensions.Operators.CustomOperators.OfType<TAction>(R3.Observable<R3dux.Abstractions.IAction>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/CustomOperators.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: OfType
    path: ../src/library/R3dux.Operators/CustomOperators.cs
    startLine: 20
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Filters the observable sequence to include only elements of a specified type.
  example: []
  syntax:
    content: 'public static Observable<TAction> OfType<TAction>(this Observable<IAction> source) where TAction : IAction'
    parameters:
    - id: source
      type: R3.Observable{R3dux.Abstractions.IAction}
      description: The source observable sequence.
    typeParameters:
    - id: TAction
      description: The type of elements to filter.
    return:
      type: R3.Observable{{TAction}}
      description: An observable sequence that contains elements from the input sequence of type TAction.
    content.vb: Public Shared Function OfType(Of TAction As IAction)(source As Observable(Of IAction)) As Observable(Of TAction)
  overload: R3dux.Extensions.Operators.CustomOperators.OfType*
  nameWithType.vb: CustomOperators.OfType(Of TAction)(Observable(Of IAction))
  fullName.vb: R3dux.Extensions.Operators.CustomOperators.OfType(Of TAction)(R3.Observable(Of R3dux.Abstractions.IAction))
  name.vb: OfType(Of TAction)(Observable(Of IAction))
- uid: R3dux.Extensions.Operators.CustomOperators.WithSliceState``2(R3.Observable{``1},R3.Observable{R3dux.Abstractions.IRootState},System.String)
  commentId: M:R3dux.Extensions.Operators.CustomOperators.WithSliceState``2(R3.Observable{``1},R3.Observable{R3dux.Abstractions.IRootState},System.String)
  id: WithSliceState``2(R3.Observable{``1},R3.Observable{R3dux.Abstractions.IRootState},System.String)
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.CustomOperators
  langs:
  - csharp
  - vb
  name: WithSliceState<TState, TAction>(Observable<TAction>, Observable<IRootState>, string?)
  nameWithType: CustomOperators.WithSliceState<TState, TAction>(Observable<TAction>, Observable<IRootState>, string?)
  fullName: R3dux.Extensions.Operators.CustomOperators.WithSliceState<TState, TAction>(R3.Observable<TAction>, R3.Observable<R3dux.Abstractions.IRootState>, string?)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/CustomOperators.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: WithSliceState
    path: ../src/library/R3dux.Operators/CustomOperators.cs
    startLine: 36
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Combines the observable sequence with the state of a slice and projects the result into a new form.
  example: []
  syntax:
    content: 'public static Observable<StateActionPair<TState, TAction>> WithSliceState<TState, TAction>(this Observable<TAction> source, Observable<IRootState> rootStateObs, string? sliceKey = null) where TState : notnull where TAction : IAction'
    parameters:
    - id: source
      type: R3.Observable{{TAction}}
      description: The source observable sequence.
    - id: rootStateObs
      type: R3.Observable{R3dux.Abstractions.IRootState}
      description: The observable sequence of the root state.
    - id: sliceKey
      type: System.String
      description: The key of the slice to select.
    typeParameters:
    - id: TState
      description: The type of the state.
    - id: TAction
      description: The type of the action.
    return:
      type: R3.Observable{R3dux.Extensions.Operators.StateActionPair{{TState},{TAction}}}
      description: An observable sequence of StateActionPair.
    content.vb: Public Shared Function WithSliceState(Of TState, TAction As IAction)(source As Observable(Of TAction), rootStateObs As Observable(Of IRootState), sliceKey As String = Nothing) As Observable(Of StateActionPair(Of TState, TAction))
  overload: R3dux.Extensions.Operators.CustomOperators.WithSliceState*
  nameWithType.vb: CustomOperators.WithSliceState(Of TState, TAction)(Observable(Of TAction), Observable(Of IRootState), String)
  fullName.vb: R3dux.Extensions.Operators.CustomOperators.WithSliceState(Of TState, TAction)(R3.Observable(Of TAction), R3.Observable(Of R3dux.Abstractions.IRootState), String)
  name.vb: WithSliceState(Of TState, TAction)(Observable(Of TAction), Observable(Of IRootState), String)
- uid: R3dux.Extensions.Operators.CustomOperators.SelectAction``2(R3.Observable{``0},System.Func{``0,``1})
  commentId: M:R3dux.Extensions.Operators.CustomOperators.SelectAction``2(R3.Observable{``0},System.Func{``0,``1})
  id: SelectAction``2(R3.Observable{``0},System.Func{``0,``1})
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.CustomOperators
  langs:
  - csharp
  - vb
  name: SelectAction<TSource, TResult>(Observable<TSource>, Func<TSource, TResult>)
  nameWithType: CustomOperators.SelectAction<TSource, TResult>(Observable<TSource>, Func<TSource, TResult>)
  fullName: R3dux.Extensions.Operators.CustomOperators.SelectAction<TSource, TResult>(R3.Observable<TSource>, System.Func<TSource, TResult>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/CustomOperators.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: SelectAction
    path: ../src/library/R3dux.Operators/CustomOperators.cs
    startLine: 63
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Projects each element of an observable sequence into a new form and casts it to IAction.
  example: []
  syntax:
    content: public static Observable<IAction> SelectAction<TSource, TResult>(this Observable<TSource> source, Func<TSource, TResult> selector)
    parameters:
    - id: source
      type: R3.Observable{{TSource}}
      description: The source observable sequence.
    - id: selector
      type: System.Func{{TSource},{TResult}}
      description: A transform function to apply to each element.
    typeParameters:
    - id: TSource
      description: The type of the source elements.
    - id: TResult
      description: The type of the result elements, which must implement IAction.
    return:
      type: R3.Observable{R3dux.Abstractions.IAction}
      description: An observable sequence of IAction.
    content.vb: Public Shared Function SelectAction(Of TSource, TResult)(source As Observable(Of TSource), selector As Func(Of TSource, TResult)) As Observable(Of IAction)
  overload: R3dux.Extensions.Operators.CustomOperators.SelectAction*
  nameWithType.vb: CustomOperators.SelectAction(Of TSource, TResult)(Observable(Of TSource), Func(Of TSource, TResult))
  fullName.vb: R3dux.Extensions.Operators.CustomOperators.SelectAction(Of TSource, TResult)(R3.Observable(Of TSource), System.Func(Of TSource, TResult))
  name.vb: SelectAction(Of TSource, TResult)(Observable(Of TSource), Func(Of TSource, TResult))
- uid: R3dux.Extensions.Operators.CustomOperators.CatchAction``1(R3.Observable{``0},System.Func{System.Exception,``0})
  commentId: M:R3dux.Extensions.Operators.CustomOperators.CatchAction``1(R3.Observable{``0},System.Func{System.Exception,``0})
  id: CatchAction``1(R3.Observable{``0},System.Func{System.Exception,``0})
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.CustomOperators
  langs:
  - csharp
  - vb
  name: CatchAction<TSource>(Observable<TSource>, Func<Exception, TSource>)
  nameWithType: CustomOperators.CatchAction<TSource>(Observable<TSource>, Func<Exception, TSource>)
  fullName: R3dux.Extensions.Operators.CustomOperators.CatchAction<TSource>(R3.Observable<TSource>, System.Func<System.Exception, TSource>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/CustomOperators.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: CatchAction
    path: ../src/library/R3dux.Operators/CustomOperators.cs
    startLine: 79
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Catches exceptions in the observable sequence and replaces the exception with a specified value.
  example: []
  syntax:
    content: public static Observable<TSource> CatchAction<TSource>(this Observable<TSource> source, Func<Exception, TSource> selector)
    parameters:
    - id: source
      type: R3.Observable{{TSource}}
      description: The source observable sequence.
    - id: selector
      type: System.Func{System.Exception,{TSource}}
      description: A transform function to apply to each exception.
    typeParameters:
    - id: TSource
      description: The type of the source elements.
    return:
      type: R3.Observable{{TSource}}
      description: An observable sequence containing the source elements and replacing exceptions with the result of the selector function.
    content.vb: Public Shared Function CatchAction(Of TSource)(source As Observable(Of TSource), selector As Func(Of Exception, TSource)) As Observable(Of TSource)
  overload: R3dux.Extensions.Operators.CustomOperators.CatchAction*
  nameWithType.vb: CustomOperators.CatchAction(Of TSource)(Observable(Of TSource), Func(Of Exception, TSource))
  fullName.vb: R3dux.Extensions.Operators.CustomOperators.CatchAction(Of TSource)(R3.Observable(Of TSource), System.Func(Of System.Exception, TSource))
  name.vb: CatchAction(Of TSource)(Observable(Of TSource), Func(Of Exception, TSource))
- uid: R3dux.Extensions.Operators.CustomOperators.InvokeService``2(R3.Observable{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Func{``1,R3dux.Abstractions.IAction},System.Func{System.Exception,R3dux.Abstractions.IAction})
  commentId: M:R3dux.Extensions.Operators.CustomOperators.InvokeService``2(R3.Observable{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Func{``1,R3dux.Abstractions.IAction},System.Func{System.Exception,R3dux.Abstractions.IAction})
  id: InvokeService``2(R3.Observable{``0},System.Func{``0,System.Threading.Tasks.ValueTask{``1}},System.Func{``1,R3dux.Abstractions.IAction},System.Func{System.Exception,R3dux.Abstractions.IAction})
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.CustomOperators
  langs:
  - csharp
  - vb
  name: InvokeService<TAction, TResult>(Observable<TAction>, Func<TAction, ValueTask<TResult>>, Func<TResult, IAction>, Func<Exception, IAction>)
  nameWithType: CustomOperators.InvokeService<TAction, TResult>(Observable<TAction>, Func<TAction, ValueTask<TResult>>, Func<TResult, IAction>, Func<Exception, IAction>)
  fullName: R3dux.Extensions.Operators.CustomOperators.InvokeService<TAction, TResult>(R3.Observable<TAction>, System.Func<TAction, System.Threading.Tasks.ValueTask<TResult>>, System.Func<TResult, R3dux.Abstractions.IAction>, System.Func<System.Exception, R3dux.Abstractions.IAction>)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/CustomOperators.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: InvokeService
    path: ../src/library/R3dux.Operators/CustomOperators.cs
    startLine: 96
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Invokes a service call for each element in the observable sequence, returning a sequence of actions based on the result or error.
  example: []
  syntax:
    content: public static Observable<IAction> InvokeService<TAction, TResult>(this Observable<TAction> source, Func<TAction, ValueTask<TResult>> serviceCall, Func<TResult, IAction> successSelector, Func<Exception, IAction> errorSelector)
    parameters:
    - id: source
      type: R3.Observable{{TAction}}
      description: The source observable sequence.
    - id: serviceCall
      type: System.Func{{TAction},System.Threading.Tasks.ValueTask{{TResult}}}
      description: A function that performs the service call.
    - id: successSelector
      type: System.Func{{TResult},R3dux.Abstractions.IAction}
      description: A function that selects the success action based on the result.
    - id: errorSelector
      type: System.Func{System.Exception,R3dux.Abstractions.IAction}
      description: A function that selects the error action based on the exception.
    typeParameters:
    - id: TAction
      description: The type of the source elements, which are actions to be processed.
    - id: TResult
      description: The type of the result from the service call.
    return:
      type: R3.Observable{R3dux.Abstractions.IAction}
      description: An observable sequence of actions resulting from the service call.
    content.vb: Public Shared Function InvokeService(Of TAction, TResult)(source As Observable(Of TAction), serviceCall As Func(Of TAction, ValueTask(Of TResult)), successSelector As Func(Of TResult, IAction), errorSelector As Func(Of Exception, IAction)) As Observable(Of IAction)
  overload: R3dux.Extensions.Operators.CustomOperators.InvokeService*
  nameWithType.vb: CustomOperators.InvokeService(Of TAction, TResult)(Observable(Of TAction), Func(Of TAction, ValueTask(Of TResult)), Func(Of TResult, IAction), Func(Of Exception, IAction))
  fullName.vb: R3dux.Extensions.Operators.CustomOperators.InvokeService(Of TAction, TResult)(R3.Observable(Of TAction), System.Func(Of TAction, System.Threading.Tasks.ValueTask(Of TResult)), System.Func(Of TResult, R3dux.Abstractions.IAction), System.Func(Of System.Exception, R3dux.Abstractions.IAction))
  name.vb: InvokeService(Of TAction, TResult)(Observable(Of TAction), Func(Of TAction, ValueTask(Of TResult)), Func(Of TResult, IAction), Func(Of Exception, IAction))
- uid: R3dux.Extensions.Operators.CustomOperators.LogMessage``1(R3.Observable{``0},System.String)
  commentId: M:R3dux.Extensions.Operators.CustomOperators.LogMessage``1(R3.Observable{``0},System.String)
  id: LogMessage``1(R3.Observable{``0},System.String)
  isExtensionMethod: true
  parent: R3dux.Extensions.Operators.CustomOperators
  langs:
  - csharp
  - vb
  name: LogMessage<TSource>(Observable<TSource>, string)
  nameWithType: CustomOperators.LogMessage<TSource>(Observable<TSource>, string)
  fullName: R3dux.Extensions.Operators.CustomOperators.LogMessage<TSource>(R3.Observable<TSource>, string)
  type: Method
  source:
    remote:
      path: src/library/R3dux.Operators/CustomOperators.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: LogMessage
    path: ../src/library/R3dux.Operators/CustomOperators.cs
    startLine: 123
  assemblies:
  - R3dux.Operators
  namespace: R3dux.Extensions.Operators
  summary: Logs a message to the console for each element in the observable sequence.
  example: []
  syntax:
    content: public static Observable<TSource> LogMessage<TSource>(this Observable<TSource> source, string message)
    parameters:
    - id: source
      type: R3.Observable{{TSource}}
      description: The source observable sequence.
    - id: message
      type: System.String
      description: The message to log to the console.
    typeParameters:
    - id: TSource
      description: The type of the source elements.
    return:
      type: R3.Observable{{TSource}}
      description: The source sequence with added side-effects of logging each element.
    content.vb: Public Shared Function LogMessage(Of TSource)(source As Observable(Of TSource), message As String) As Observable(Of TSource)
  overload: R3dux.Extensions.Operators.CustomOperators.LogMessage*
  nameWithType.vb: CustomOperators.LogMessage(Of TSource)(Observable(Of TSource), String)
  fullName.vb: R3dux.Extensions.Operators.CustomOperators.LogMessage(Of TSource)(R3.Observable(Of TSource), String)
  name.vb: LogMessage(Of TSource)(Observable(Of TSource), String)
references:
- uid: R3dux.Extensions.Operators
  commentId: N:R3dux.Extensions.Operators
  href: R3dux.html
  name: R3dux.Extensions.Operators
  nameWithType: R3dux.Extensions.Operators
  fullName: R3dux.Extensions.Operators
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Extensions
    name: Extensions
    href: R3dux.Extensions.html
  - name: .
  - uid: R3dux.Extensions.Operators
    name: Operators
    href: R3dux.Extensions.Operators.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Extensions
    name: Extensions
    href: R3dux.Extensions.html
  - name: .
  - uid: R3dux.Extensions.Operators
    name: Operators
    href: R3dux.Extensions.Operators.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: R3dux.Extensions.Operators.CustomOperators.OfType*
  commentId: Overload:R3dux.Extensions.Operators.CustomOperators.OfType
  href: R3dux.Extensions.Operators.CustomOperators.html#R3dux_Extensions_Operators_CustomOperators_OfType__1_R3_Observable_R3dux_Abstractions_IAction__
  name: OfType
  nameWithType: CustomOperators.OfType
  fullName: R3dux.Extensions.Operators.CustomOperators.OfType
- uid: R3.Observable{R3dux.Abstractions.IAction}
  commentId: T:R3.Observable{R3dux.Abstractions.IAction}
  parent: R3
  definition: R3.Observable`1
  href: R3dux.Abstractions.IAction.html
  name: Observable<IAction>
  nameWithType: Observable<IAction>
  fullName: R3.Observable<R3dux.Abstractions.IAction>
  nameWithType.vb: Observable(Of IAction)
  fullName.vb: R3.Observable(Of R3dux.Abstractions.IAction)
  name.vb: Observable(Of IAction)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
- uid: R3.Observable{{TAction}}
  commentId: T:R3.Observable{``0}
  parent: R3
  definition: R3.Observable`1
  name: Observable<TAction>
  nameWithType: Observable<TAction>
  fullName: R3.Observable<TAction>
  nameWithType.vb: Observable(Of TAction)
  fullName.vb: R3.Observable(Of TAction)
  name.vb: Observable(Of TAction)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: TAction
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TAction
  - name: )
- uid: R3.Observable`1
  commentId: T:R3.Observable`1
  isExternal: true
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: R3.Observable<T>
  nameWithType.vb: Observable(Of T)
  fullName.vb: R3.Observable(Of T)
  name.vb: Observable(Of T)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3
  commentId: N:R3
  isExternal: true
  name: R3
  nameWithType: R3
  fullName: R3
- uid: R3dux.Extensions.Operators.CustomOperators.WithSliceState*
  commentId: Overload:R3dux.Extensions.Operators.CustomOperators.WithSliceState
  href: R3dux.Extensions.Operators.CustomOperators.html#R3dux_Extensions_Operators_CustomOperators_WithSliceState__2_R3_Observable___1__R3_Observable_R3dux_Abstractions_IRootState__System_String_
  name: WithSliceState
  nameWithType: CustomOperators.WithSliceState
  fullName: R3dux.Extensions.Operators.CustomOperators.WithSliceState
- uid: R3.Observable{R3dux.Abstractions.IRootState}
  commentId: T:R3.Observable{R3dux.Abstractions.IRootState}
  parent: R3
  definition: R3.Observable`1
  href: R3dux.Abstractions.IRootState.html
  name: Observable<IRootState>
  nameWithType: Observable<IRootState>
  fullName: R3.Observable<R3dux.Abstractions.IRootState>
  nameWithType.vb: Observable(Of IRootState)
  fullName.vb: R3.Observable(Of R3dux.Abstractions.IRootState)
  name.vb: Observable(Of IRootState)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - uid: R3dux.Abstractions.IRootState
    name: IRootState
    href: R3dux.Abstractions.IRootState.html
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.Abstractions.IRootState
    name: IRootState
    href: R3dux.Abstractions.IRootState.html
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: R3.Observable{R3dux.Extensions.Operators.StateActionPair{{TState},{TAction}}}
  commentId: T:R3.Observable{R3dux.Extensions.Operators.StateActionPair{``0,``1}}
  parent: R3
  definition: R3.Observable`1
  href: R3dux.Extensions.Operators.StateActionPair-2.html
  name: Observable<StateActionPair<TState, TAction>>
  nameWithType: Observable<StateActionPair<TState, TAction>>
  fullName: R3.Observable<R3dux.Extensions.Operators.StateActionPair<TState, TAction>>
  nameWithType.vb: Observable(Of StateActionPair(Of TState, TAction))
  fullName.vb: R3.Observable(Of R3dux.Extensions.Operators.StateActionPair(Of TState, TAction))
  name.vb: Observable(Of StateActionPair(Of TState, TAction))
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - uid: R3dux.Extensions.Operators.StateActionPair`2
    name: StateActionPair
    href: R3dux.Extensions.Operators.StateActionPair-2.html
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - name: TAction
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.Extensions.Operators.StateActionPair`2
    name: StateActionPair
    href: R3dux.Extensions.Operators.StateActionPair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - name: TAction
  - name: )
  - name: )
- uid: R3dux.Extensions.Operators.CustomOperators.SelectAction*
  commentId: Overload:R3dux.Extensions.Operators.CustomOperators.SelectAction
  href: R3dux.Extensions.Operators.CustomOperators.html#R3dux_Extensions_Operators_CustomOperators_SelectAction__2_R3_Observable___0__System_Func___0___1__
  name: SelectAction
  nameWithType: CustomOperators.SelectAction
  fullName: R3dux.Extensions.Operators.CustomOperators.SelectAction
- uid: R3.Observable{{TSource}}
  commentId: T:R3.Observable{``0}
  parent: R3
  definition: R3.Observable`1
  name: Observable<TSource>
  nameWithType: Observable<TSource>
  fullName: R3.Observable<TSource>
  nameWithType.vb: Observable(Of TSource)
  fullName.vb: R3.Observable(Of TSource)
  name.vb: Observable(Of TSource)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: )
- uid: System.Func{{TSource},{TResult}}
  commentId: T:System.Func{``0,``1}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TSource, TResult>
  nameWithType: Func<TSource, TResult>
  fullName: System.Func<TSource, TResult>
  nameWithType.vb: Func(Of TSource, TResult)
  fullName.vb: System.Func(Of TSource, TResult)
  name.vb: Func(Of TSource, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TSource
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TSource
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: R3dux.Extensions.Operators.CustomOperators.CatchAction*
  commentId: Overload:R3dux.Extensions.Operators.CustomOperators.CatchAction
  href: R3dux.Extensions.Operators.CustomOperators.html#R3dux_Extensions_Operators_CustomOperators_CatchAction__1_R3_Observable___0__System_Func_System_Exception___0__
  name: CatchAction
  nameWithType: CustomOperators.CatchAction
  fullName: R3dux.Extensions.Operators.CustomOperators.CatchAction
- uid: System.Func{System.Exception,{TSource}}
  commentId: T:System.Func{System.Exception,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Exception, TSource>
  nameWithType: Func<Exception, TSource>
  fullName: System.Func<System.Exception, TSource>
  nameWithType.vb: Func(Of Exception, TSource)
  fullName.vb: System.Func(Of System.Exception, TSource)
  name.vb: Func(Of Exception, TSource)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - name: TSource
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - name: TSource
  - name: )
- uid: R3dux.Extensions.Operators.CustomOperators.InvokeService*
  commentId: Overload:R3dux.Extensions.Operators.CustomOperators.InvokeService
  href: R3dux.Extensions.Operators.CustomOperators.html#R3dux_Extensions_Operators_CustomOperators_InvokeService__2_R3_Observable___0__System_Func___0_System_Threading_Tasks_ValueTask___1___System_Func___1_R3dux_Abstractions_IAction__System_Func_System_Exception_R3dux_Abstractions_IAction__
  name: InvokeService
  nameWithType: CustomOperators.InvokeService
  fullName: R3dux.Extensions.Operators.CustomOperators.InvokeService
- uid: System.Func{{TAction},System.Threading.Tasks.ValueTask{{TResult}}}
  commentId: T:System.Func{``0,System.Threading.Tasks.ValueTask{``1}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TAction, ValueTask<TResult>>
  nameWithType: Func<TAction, ValueTask<TResult>>
  fullName: System.Func<TAction, System.Threading.Tasks.ValueTask<TResult>>
  nameWithType.vb: Func(Of TAction, ValueTask(Of TResult))
  fullName.vb: System.Func(Of TAction, System.Threading.Tasks.ValueTask(Of TResult))
  name.vb: Func(Of TAction, ValueTask(Of TResult))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TAction
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TAction
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: System.Func{{TResult},R3dux.Abstractions.IAction}
  commentId: T:System.Func{``1,R3dux.Abstractions.IAction}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TResult, IAction>
  nameWithType: Func<TResult, IAction>
  fullName: System.Func<TResult, R3dux.Abstractions.IAction>
  nameWithType.vb: Func(Of TResult, IAction)
  fullName.vb: System.Func(Of TResult, R3dux.Abstractions.IAction)
  name.vb: Func(Of TResult, IAction)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TResult
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
- uid: System.Func{System.Exception,R3dux.Abstractions.IAction}
  commentId: T:System.Func{System.Exception,R3dux.Abstractions.IAction}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Exception, IAction>
  nameWithType: Func<Exception, IAction>
  fullName: System.Func<System.Exception, R3dux.Abstractions.IAction>
  nameWithType.vb: Func(Of Exception, IAction)
  fullName.vb: System.Func(Of System.Exception, R3dux.Abstractions.IAction)
  name.vb: Func(Of Exception, IAction)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
- uid: R3dux.Extensions.Operators.CustomOperators.LogMessage*
  commentId: Overload:R3dux.Extensions.Operators.CustomOperators.LogMessage
  href: R3dux.Extensions.Operators.CustomOperators.html#R3dux_Extensions_Operators_CustomOperators_LogMessage__1_R3_Observable___0__System_String_
  name: LogMessage
  nameWithType: CustomOperators.LogMessage
  fullName: R3dux.Extensions.Operators.CustomOperators.LogMessage
