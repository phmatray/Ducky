### YamlMime:ManagedReference
items:
- uid: R3dux.RootState
  commentId: T:R3dux.RootState
  id: RootState
  parent: R3dux
  children:
  - R3dux.RootState.#ctor(System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object})
  - R3dux.RootState.ContainsKey(System.String)
  - R3dux.RootState.GetKeys
  - R3dux.RootState.GetSliceState``1
  - R3dux.RootState.GetSliceState``1(System.String)
  - R3dux.RootState.GetStateDictionary
  langs:
  - csharp
  - vb
  name: RootState
  nameWithType: RootState
  fullName: R3dux.RootState
  type: Class
  source:
    remote:
      path: src/library/R3dux/RootState.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: RootState
    path: ../src/library/R3dux/RootState.cs
    startLine: 12
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Represents the root state of the application, managing slice states.
  example: []
  syntax:
    content: 'public sealed record RootState : IRootState, IEquatable<RootState>'
    content.vb: Public NotInheritable Class RootState Implements IRootState, IEquatable(Of RootState)
  inheritance:
  - System.Object
  implements:
  - R3dux.Abstractions.IRootState
  - System.IEquatable{R3dux.RootState}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: R3dux.RootState.#ctor(System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object})
  commentId: M:R3dux.RootState.#ctor(System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object})
  id: '#ctor(System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object})'
  parent: R3dux.RootState
  langs:
  - csharp
  - vb
  name: RootState(ImmutableSortedDictionary<string, object>)
  nameWithType: RootState.RootState(ImmutableSortedDictionary<string, object>)
  fullName: R3dux.RootState.RootState(System.Collections.Immutable.ImmutableSortedDictionary<string, object>)
  type: Constructor
  source:
    remote:
      path: src/library/R3dux/RootState.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: .ctor
    path: ../src/library/R3dux/RootState.cs
    startLine: 20
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Initializes a new instance of the <xref href="R3dux.RootState" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public RootState(ImmutableSortedDictionary<string, object> state)
    parameters:
    - id: state
      type: System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object}
      description: The state dictionary.
    content.vb: Public Sub New(state As ImmutableSortedDictionary(Of String, Object))
  overload: R3dux.RootState.#ctor*
  nameWithType.vb: RootState.New(ImmutableSortedDictionary(Of String, Object))
  fullName.vb: R3dux.RootState.New(System.Collections.Immutable.ImmutableSortedDictionary(Of String, Object))
  name.vb: New(ImmutableSortedDictionary(Of String, Object))
- uid: R3dux.RootState.GetStateDictionary
  commentId: M:R3dux.RootState.GetStateDictionary
  id: GetStateDictionary
  parent: R3dux.RootState
  langs:
  - csharp
  - vb
  name: GetStateDictionary()
  nameWithType: RootState.GetStateDictionary()
  fullName: R3dux.RootState.GetStateDictionary()
  type: Method
  source:
    remote:
      path: src/library/R3dux/RootState.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: GetStateDictionary
    path: ../src/library/R3dux/RootState.cs
    startLine: 27
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the underlying state dictionary for serialization purposes.
  example: []
  syntax:
    content: public ImmutableSortedDictionary<string, object> GetStateDictionary()
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object}
      description: The state dictionary.
    content.vb: Public Function GetStateDictionary() As ImmutableSortedDictionary(Of String, Object)
  overload: R3dux.RootState.GetStateDictionary*
  implements:
  - R3dux.Abstractions.IRootState.GetStateDictionary
- uid: R3dux.RootState.GetKeys
  commentId: M:R3dux.RootState.GetKeys
  id: GetKeys
  parent: R3dux.RootState
  langs:
  - csharp
  - vb
  name: GetKeys()
  nameWithType: RootState.GetKeys()
  fullName: R3dux.RootState.GetKeys()
  type: Method
  source:
    remote:
      path: src/library/R3dux/RootState.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: GetKeys
    path: ../src/library/R3dux/RootState.cs
    startLine: 33
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the keys of the state.
  example: []
  syntax:
    content: public ImmutableSortedSet<string> GetKeys()
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{System.String}
      description: The keys of the state.
    content.vb: Public Function GetKeys() As ImmutableSortedSet(Of String)
  overload: R3dux.RootState.GetKeys*
  implements:
  - R3dux.Abstractions.IRootState.GetKeys
- uid: R3dux.RootState.GetSliceState``1(System.String)
  commentId: M:R3dux.RootState.GetSliceState``1(System.String)
  id: GetSliceState``1(System.String)
  parent: R3dux.RootState
  langs:
  - csharp
  - vb
  name: GetSliceState<TState>(string)
  nameWithType: RootState.GetSliceState<TState>(string)
  fullName: R3dux.RootState.GetSliceState<TState>(string)
  type: Method
  source:
    remote:
      path: src/library/R3dux/RootState.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: GetSliceState
    path: ../src/library/R3dux/RootState.cs
    startLine: 40
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the slice state associated with the specified key.
  example: []
  syntax:
    content: 'public TState GetSliceState<TState>(string key) where TState : notnull'
    parameters:
    - id: key
      type: System.String
      description: The key of the state to select.
    typeParameters:
    - id: TState
      description: The type of the state to select.
    return:
      type: '{TState}'
      description: The state associated with the specified key.
    content.vb: Public Function GetSliceState(Of TState)(key As String) As TState
  overload: R3dux.RootState.GetSliceState*
  exceptions:
  - type: R3dux.Abstractions.R3duxException
    commentId: T:R3dux.Abstractions.R3duxException
    description: Thrown when the state is not of the expected type.
  implements:
  - R3dux.Abstractions.IRootState.GetSliceState``1(System.String)
  nameWithType.vb: RootState.GetSliceState(Of TState)(String)
  fullName.vb: R3dux.RootState.GetSliceState(Of TState)(String)
  name.vb: GetSliceState(Of TState)(String)
- uid: R3dux.RootState.GetSliceState``1
  commentId: M:R3dux.RootState.GetSliceState``1
  id: GetSliceState``1
  parent: R3dux.RootState
  langs:
  - csharp
  - vb
  name: GetSliceState<TState>()
  nameWithType: RootState.GetSliceState<TState>()
  fullName: R3dux.RootState.GetSliceState<TState>()
  type: Method
  source:
    remote:
      path: src/library/R3dux/RootState.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: GetSliceState
    path: ../src/library/R3dux/RootState.cs
    startLine: 52
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the slice state of the specified type.
  example: []
  syntax:
    content: 'public TState GetSliceState<TState>() where TState : notnull'
    typeParameters:
    - id: TState
      description: The type of the state to select.
    return:
      type: '{TState}'
      description: The state of the specified type.
    content.vb: Public Function GetSliceState(Of TState)() As TState
  overload: R3dux.RootState.GetSliceState*
  exceptions:
  - type: R3dux.Abstractions.R3duxException
    commentId: T:R3dux.Abstractions.R3duxException
    description: Thrown when the state is not found.
  implements:
  - R3dux.Abstractions.IRootState.GetSliceState``1
  nameWithType.vb: RootState.GetSliceState(Of TState)()
  fullName.vb: R3dux.RootState.GetSliceState(Of TState)()
  name.vb: GetSliceState(Of TState)()
- uid: R3dux.RootState.ContainsKey(System.String)
  commentId: M:R3dux.RootState.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: R3dux.RootState
  langs:
  - csharp
  - vb
  name: ContainsKey(string)
  nameWithType: RootState.ContainsKey(string)
  fullName: R3dux.RootState.ContainsKey(string)
  type: Method
  source:
    remote:
      path: src/library/R3dux/RootState.cs
      branch: features/documentation
      repo: https://github.com/phmatray/R3dux.git
    id: ContainsKey
    path: ../src/library/R3dux/RootState.cs
    startLine: 68
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Determines whether the state contains an element with the specified key.
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    parameters:
    - id: key
      type: System.String
      description: The key to locate in the state.
    return:
      type: System.Boolean
      description: <code>true</code> if the state contains an element with the key; otherwise, <code>false</code>.
    content.vb: Public Function ContainsKey(key As String) As Boolean
  overload: R3dux.RootState.ContainsKey*
  implements:
  - R3dux.Abstractions.IRootState.ContainsKey(System.String)
  nameWithType.vb: RootState.ContainsKey(String)
  fullName.vb: R3dux.RootState.ContainsKey(String)
  name.vb: ContainsKey(String)
references:
- uid: R3dux
  commentId: N:R3dux
  href: R3dux.html
  name: R3dux
  nameWithType: R3dux
  fullName: R3dux
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: R3dux.Abstractions.IRootState
  commentId: T:R3dux.Abstractions.IRootState
  parent: R3dux.Abstractions
  href: R3dux.Abstractions.IRootState.html
  name: IRootState
  nameWithType: IRootState
  fullName: R3dux.Abstractions.IRootState
- uid: System.IEquatable{R3dux.RootState}
  commentId: T:System.IEquatable{R3dux.RootState}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<RootState>
  nameWithType: IEquatable<RootState>
  fullName: System.IEquatable<R3dux.RootState>
  nameWithType.vb: IEquatable(Of RootState)
  fullName.vb: System.IEquatable(Of R3dux.RootState)
  name.vb: IEquatable(Of RootState)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: R3dux.RootState
    name: RootState
    href: R3dux.RootState.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.RootState
    name: RootState
    href: R3dux.RootState.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: R3dux.Abstractions
  commentId: N:R3dux.Abstractions
  href: R3dux.html
  name: R3dux.Abstractions
  nameWithType: R3dux.Abstractions
  fullName: R3dux.Abstractions
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3dux.RootState
  commentId: T:R3dux.RootState
  href: R3dux.RootState.html
  name: RootState
  nameWithType: RootState
  fullName: R3dux.RootState
- uid: R3dux.RootState.#ctor*
  commentId: Overload:R3dux.RootState.#ctor
  href: R3dux.RootState.html#R3dux_RootState__ctor_System_Collections_Immutable_ImmutableSortedDictionary_System_String_System_Object__
  name: RootState
  nameWithType: RootState.RootState
  fullName: R3dux.RootState.RootState
  nameWithType.vb: RootState.New
  fullName.vb: R3dux.RootState.New
  name.vb: New
- uid: System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object}
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary{System.String,System.Object}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  name: ImmutableSortedDictionary<string, object>
  nameWithType: ImmutableSortedDictionary<string, object>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<string, object>
  nameWithType.vb: ImmutableSortedDictionary(Of String, Object)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of String, Object)
  name.vb: ImmutableSortedDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  commentId: T:System.Collections.Immutable.ImmutableSortedDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  name: ImmutableSortedDictionary<TKey, TValue>
  nameWithType: ImmutableSortedDictionary<TKey, TValue>
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  nameWithType.vb: ImmutableSortedDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue)
  name.vb: ImmutableSortedDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesorteddictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: R3dux.RootState.GetStateDictionary*
  commentId: Overload:R3dux.RootState.GetStateDictionary
  href: R3dux.RootState.html#R3dux_RootState_GetStateDictionary
  name: GetStateDictionary
  nameWithType: RootState.GetStateDictionary
  fullName: R3dux.RootState.GetStateDictionary
- uid: R3dux.Abstractions.IRootState.GetStateDictionary
  commentId: M:R3dux.Abstractions.IRootState.GetStateDictionary
  parent: R3dux.Abstractions.IRootState
  href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetStateDictionary
  name: GetStateDictionary()
  nameWithType: IRootState.GetStateDictionary()
  fullName: R3dux.Abstractions.IRootState.GetStateDictionary()
  spec.csharp:
  - uid: R3dux.Abstractions.IRootState.GetStateDictionary
    name: GetStateDictionary
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetStateDictionary
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.IRootState.GetStateDictionary
    name: GetStateDictionary
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetStateDictionary
  - name: (
  - name: )
- uid: R3dux.RootState.GetKeys*
  commentId: Overload:R3dux.RootState.GetKeys
  href: R3dux.RootState.html#R3dux_RootState_GetKeys
  name: GetKeys
  nameWithType: RootState.GetKeys
  fullName: R3dux.RootState.GetKeys
- uid: R3dux.Abstractions.IRootState.GetKeys
  commentId: M:R3dux.Abstractions.IRootState.GetKeys
  parent: R3dux.Abstractions.IRootState
  href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetKeys
  name: GetKeys()
  nameWithType: IRootState.GetKeys()
  fullName: R3dux.Abstractions.IRootState.GetKeys()
  spec.csharp:
  - uid: R3dux.Abstractions.IRootState.GetKeys
    name: GetKeys
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetKeys
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.IRootState.GetKeys
    name: GetKeys
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetKeys
  - name: (
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedSet{System.String}
  commentId: T:System.Collections.Immutable.ImmutableSortedSet{System.String}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  name: ImmutableSortedSet<string>
  nameWithType: ImmutableSortedSet<string>
  fullName: System.Collections.Immutable.ImmutableSortedSet<string>
  nameWithType.vb: ImmutableSortedSet(Of String)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet(Of String)
  name.vb: ImmutableSortedSet(Of String)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Immutable.ImmutableSortedSet`1
  commentId: T:System.Collections.Immutable.ImmutableSortedSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  name: ImmutableSortedSet<T>
  nameWithType: ImmutableSortedSet<T>
  fullName: System.Collections.Immutable.ImmutableSortedSet<T>
  nameWithType.vb: ImmutableSortedSet(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet(Of T)
  name.vb: ImmutableSortedSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablesortedset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3dux.Abstractions.R3duxException
  commentId: T:R3dux.Abstractions.R3duxException
  href: R3dux.Abstractions.R3duxException.html
  name: R3duxException
  nameWithType: R3duxException
  fullName: R3dux.Abstractions.R3duxException
- uid: R3dux.RootState.GetSliceState*
  commentId: Overload:R3dux.RootState.GetSliceState
  href: R3dux.RootState.html#R3dux_RootState_GetSliceState__1_System_String_
  name: GetSliceState
  nameWithType: RootState.GetSliceState
  fullName: R3dux.RootState.GetSliceState
- uid: R3dux.Abstractions.IRootState.GetSliceState``1(System.String)
  commentId: M:R3dux.Abstractions.IRootState.GetSliceState``1(System.String)
  parent: R3dux.Abstractions.IRootState
  isExternal: true
  href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetSliceState__1_System_String_
  name: GetSliceState<TState>(string)
  nameWithType: IRootState.GetSliceState<TState>(string)
  fullName: R3dux.Abstractions.IRootState.GetSliceState<TState>(string)
  nameWithType.vb: IRootState.GetSliceState(Of TState)(String)
  fullName.vb: R3dux.Abstractions.IRootState.GetSliceState(Of TState)(String)
  name.vb: GetSliceState(Of TState)(String)
  spec.csharp:
  - uid: R3dux.Abstractions.IRootState.GetSliceState``1(System.String)
    name: GetSliceState
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetSliceState__1_System_String_
  - name: <
  - name: TState
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.IRootState.GetSliceState``1(System.String)
    name: GetSliceState
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetSliceState__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: R3dux.Abstractions.IRootState.GetSliceState``1
  commentId: M:R3dux.Abstractions.IRootState.GetSliceState``1
  parent: R3dux.Abstractions.IRootState
  href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetSliceState__1
  name: GetSliceState<TState>()
  nameWithType: IRootState.GetSliceState<TState>()
  fullName: R3dux.Abstractions.IRootState.GetSliceState<TState>()
  nameWithType.vb: IRootState.GetSliceState(Of TState)()
  fullName.vb: R3dux.Abstractions.IRootState.GetSliceState(Of TState)()
  name.vb: GetSliceState(Of TState)()
  spec.csharp:
  - uid: R3dux.Abstractions.IRootState.GetSliceState``1
    name: GetSliceState
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetSliceState__1
  - name: <
  - name: TState
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.IRootState.GetSliceState``1
    name: GetSliceState
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_GetSliceState__1
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: (
  - name: )
- uid: R3dux.RootState.ContainsKey*
  commentId: Overload:R3dux.RootState.ContainsKey
  href: R3dux.RootState.html#R3dux_RootState_ContainsKey_System_String_
  name: ContainsKey
  nameWithType: RootState.ContainsKey
  fullName: R3dux.RootState.ContainsKey
- uid: R3dux.Abstractions.IRootState.ContainsKey(System.String)
  commentId: M:R3dux.Abstractions.IRootState.ContainsKey(System.String)
  parent: R3dux.Abstractions.IRootState
  isExternal: true
  href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_ContainsKey_System_String_
  name: ContainsKey(string)
  nameWithType: IRootState.ContainsKey(string)
  fullName: R3dux.Abstractions.IRootState.ContainsKey(string)
  nameWithType.vb: IRootState.ContainsKey(String)
  fullName.vb: R3dux.Abstractions.IRootState.ContainsKey(String)
  name.vb: ContainsKey(String)
  spec.csharp:
  - uid: R3dux.Abstractions.IRootState.ContainsKey(System.String)
    name: ContainsKey
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_ContainsKey_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.IRootState.ContainsKey(System.String)
    name: ContainsKey
    href: R3dux.Abstractions.IRootState.html#R3dux_Abstractions_IRootState_ContainsKey_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
