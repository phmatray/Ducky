### YamlMime:ManagedReference
items:
- uid: R3dux.SliceReducers`1
  commentId: T:R3dux.SliceReducers`1
  id: SliceReducers`1
  parent: R3dux
  children:
  - R3dux.SliceReducers`1.Dispose
  - R3dux.SliceReducers`1.Dispose(System.Boolean)
  - R3dux.SliceReducers`1.GetInitialState
  - R3dux.SliceReducers`1.GetKey
  - R3dux.SliceReducers`1.GetState
  - R3dux.SliceReducers`1.GetStateType
  - R3dux.SliceReducers`1.OnDispatch(R3dux.Abstractions.IAction)
  - R3dux.SliceReducers`1.On``1(System.Func{`0,`0})
  - R3dux.SliceReducers`1.On``1(System.Func{`0,``0,`0})
  - R3dux.SliceReducers`1.On``1(System.Func{`0})
  - R3dux.SliceReducers`1.Reduce(`0,R3dux.Abstractions.IAction)
  - R3dux.SliceReducers`1.Reducers
  - R3dux.SliceReducers`1.State
  - R3dux.SliceReducers`1.StateUpdated
  langs:
  - csharp
  - vb
  name: SliceReducers<TState>
  nameWithType: SliceReducers<TState>
  fullName: R3dux.SliceReducers<TState>
  type: Class
  source:
    id: SliceReducers
    path: System.Text.RegularExpressions.Generator/System.Text.RegularExpressions.Generator.RegexGenerator/RegexGenerator.g.cs
    startLine: 8
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Represents a strongly-typed state slice with state management and reducers.
  remarks: >-
    Each "slice reducer" is responsible for providing an initial value

    and calculating the updates to that slice of the state.
  example: []
  syntax:
    content: 'public abstract record SliceReducers<TState> : ISlice<TState>, ISlice, IDisposable, IEquatable<SliceReducers<TState>>'
    typeParameters:
    - id: TState
      description: The type of the state managed by this slice.
    content.vb: Public MustInherit Class SliceReducers(Of TState) Implements ISlice(Of TState), ISlice, IDisposable, IEquatable(Of SliceReducers(Of TState))
  inheritance:
  - System.Object
  implements:
  - R3dux.Abstractions.ISlice{{TState}}
  - R3dux.Abstractions.ISlice
  - System.IDisposable
  - System.IEquatable{R3dux.SliceReducers`1}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SliceReducers(Of TState)
  fullName.vb: R3dux.SliceReducers(Of TState)
  name.vb: SliceReducers(Of TState)
- uid: R3dux.SliceReducers`1.State
  commentId: P:R3dux.SliceReducers`1.State
  id: State
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: State
  nameWithType: SliceReducers<TState>.State
  fullName: R3dux.SliceReducers<TState>.State
  type: Property
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: State
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 30
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets an observable sequence that produces the state of this slice.
  example: []
  syntax:
    content: public virtual Observable<TState> State { get; }
    parameters: []
    return:
      type: R3.Observable{{TState}}
      description: The observable sequence of the state.
    content.vb: Public Overridable ReadOnly Property State As Observable(Of TState)
  overload: R3dux.SliceReducers`1.State*
  implements:
  - R3dux.Abstractions.ISlice{{TState}}.State
  nameWithType.vb: SliceReducers(Of TState).State
  fullName.vb: R3dux.SliceReducers(Of TState).State
- uid: R3dux.SliceReducers`1.StateUpdated
  commentId: P:R3dux.SliceReducers`1.StateUpdated
  id: StateUpdated
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: StateUpdated
  nameWithType: SliceReducers<TState>.StateUpdated
  fullName: R3dux.SliceReducers<TState>.StateUpdated
  type: Property
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: StateUpdated
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 33
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets an observable sequence that produces a notification when the state is updated.
  example: []
  syntax:
    content: public virtual Observable<Unit> StateUpdated { get; }
    parameters: []
    return:
      type: R3.Observable{R3.Unit}
      description: The observable sequence of state updates.
    content.vb: Public Overridable ReadOnly Property StateUpdated As Observable(Of Unit)
  overload: R3dux.SliceReducers`1.StateUpdated*
  implements:
  - R3dux.Abstractions.ISlice.StateUpdated
  nameWithType.vb: SliceReducers(Of TState).StateUpdated
  fullName.vb: R3dux.SliceReducers(Of TState).StateUpdated
- uid: R3dux.SliceReducers`1.Reducers
  commentId: P:R3dux.SliceReducers`1.Reducers
  id: Reducers
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: Reducers
  nameWithType: SliceReducers<TState>.Reducers
  fullName: R3dux.SliceReducers<TState>.Reducers
  type: Property
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: Reducers
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 38
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets a dictionary that holds the reducers mapped by the type of action.
  example: []
  syntax:
    content: public Dictionary<Type, Func<TState, IAction, TState>> Reducers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Func{{TState},R3dux.Abstractions.IAction,{TState}}}
    content.vb: Public ReadOnly Property Reducers As Dictionary(Of Type, Func(Of TState, IAction, TState))
  overload: R3dux.SliceReducers`1.Reducers*
  implements:
  - R3dux.Abstractions.ISlice{{TState}}.Reducers
  nameWithType.vb: SliceReducers(Of TState).Reducers
  fullName.vb: R3dux.SliceReducers(Of TState).Reducers
- uid: R3dux.SliceReducers`1.GetKey
  commentId: M:R3dux.SliceReducers`1.GetKey
  id: GetKey
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: GetKey()
  nameWithType: SliceReducers<TState>.GetKey()
  fullName: R3dux.SliceReducers<TState>.GetKey()
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: GetKey
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 41
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the unique key for this state slice.
  example: []
  syntax:
    content: public virtual string GetKey()
    return:
      type: System.String
      description: The unique key as a string.
    content.vb: Public Overridable Function GetKey() As String
  overload: R3dux.SliceReducers`1.GetKey*
  implements:
  - R3dux.Abstractions.ISlice.GetKey
  nameWithType.vb: SliceReducers(Of TState).GetKey()
  fullName.vb: R3dux.SliceReducers(Of TState).GetKey()
- uid: R3dux.SliceReducers`1.GetStateType
  commentId: M:R3dux.SliceReducers`1.GetStateType
  id: GetStateType
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: GetStateType()
  nameWithType: SliceReducers<TState>.GetStateType()
  fullName: R3dux.SliceReducers<TState>.GetStateType()
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: GetStateType
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 64
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the type of the state managed by this slice.
  example: []
  syntax:
    content: public virtual Type GetStateType()
    return:
      type: System.Type
      description: The type of the state.
    content.vb: Public Overridable Function GetStateType() As Type
  overload: R3dux.SliceReducers`1.GetStateType*
  implements:
  - R3dux.Abstractions.ISlice.GetStateType
  nameWithType.vb: SliceReducers(Of TState).GetStateType()
  fullName.vb: R3dux.SliceReducers(Of TState).GetStateType()
- uid: R3dux.SliceReducers`1.GetState
  commentId: M:R3dux.SliceReducers`1.GetState
  id: GetState
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: GetState()
  nameWithType: SliceReducers<TState>.GetState()
  fullName: R3dux.SliceReducers<TState>.GetState()
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: GetState
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 70
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the current state of this slice.
  example: []
  syntax:
    content: public virtual object GetState()
    return:
      type: System.Object
      description: The current state as an object.
    content.vb: Public Overridable Function GetState() As Object
  overload: R3dux.SliceReducers`1.GetState*
  implements:
  - R3dux.Abstractions.ISlice.GetState
  nameWithType.vb: SliceReducers(Of TState).GetState()
  fullName.vb: R3dux.SliceReducers(Of TState).GetState()
- uid: R3dux.SliceReducers`1.OnDispatch(R3dux.Abstractions.IAction)
  commentId: M:R3dux.SliceReducers`1.OnDispatch(R3dux.Abstractions.IAction)
  id: OnDispatch(R3dux.Abstractions.IAction)
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: OnDispatch(IAction)
  nameWithType: SliceReducers<TState>.OnDispatch(IAction)
  fullName: R3dux.SliceReducers<TState>.OnDispatch(R3dux.Abstractions.IAction)
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: OnDispatch
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 84
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Handles the dispatch of an action.
  example: []
  syntax:
    content: public void OnDispatch(IAction action)
    parameters:
    - id: action
      type: R3dux.Abstractions.IAction
      description: The action to be dispatched.
    content.vb: Public Sub OnDispatch(action As IAction)
  overload: R3dux.SliceReducers`1.OnDispatch*
  implements:
  - R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  nameWithType.vb: SliceReducers(Of TState).OnDispatch(IAction)
  fullName.vb: R3dux.SliceReducers(Of TState).OnDispatch(R3dux.Abstractions.IAction)
- uid: R3dux.SliceReducers`1.On``1(System.Func{`0,``0,`0})
  commentId: M:R3dux.SliceReducers`1.On``1(System.Func{`0,``0,`0})
  id: On``1(System.Func{`0,``0,`0})
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: On<TAction>(Func<TState, TAction, TState>)
  nameWithType: SliceReducers<TState>.On<TAction>(Func<TState, TAction, TState>)
  fullName: R3dux.SliceReducers<TState>.On<TAction>(System.Func<TState, TAction, TState>)
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: On
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 119
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Maps a reducer function to a specific action type.
  example: []
  syntax:
    content: 'public void On<TAction>(Func<TState, TAction, TState> reducer) where TAction : IAction'
    parameters:
    - id: reducer
      type: System.Func{{TState},{TAction},{TState}}
      description: The reducer function that takes the state and action and returns a new state.
    typeParameters:
    - id: TAction
      description: The type of the action.
    content.vb: Public Sub [On](Of TAction As IAction)(reducer As Func(Of TState, TAction, TState))
  overload: R3dux.SliceReducers`1.On*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the reducer is null.
  nameWithType.vb: SliceReducers(Of TState).On(Of TAction)(Func(Of TState, TAction, TState))
  fullName.vb: R3dux.SliceReducers(Of TState).On(Of TAction)(System.Func(Of TState, TAction, TState))
  name.vb: On(Of TAction)(Func(Of TState, TAction, TState))
- uid: R3dux.SliceReducers`1.On``1(System.Func{`0,`0})
  commentId: M:R3dux.SliceReducers`1.On``1(System.Func{`0,`0})
  id: On``1(System.Func{`0,`0})
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: On<TAction>(Func<TState, TState>)
  nameWithType: SliceReducers<TState>.On<TAction>(Func<TState, TState>)
  fullName: R3dux.SliceReducers<TState>.On<TAction>(System.Func<TState, TState>)
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: On
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 131
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Maps a reducer function to a specific action type.
  example: []
  syntax:
    content: public void On<TAction>(Func<TState, TState> reducer)
    parameters:
    - id: reducer
      type: System.Func{{TState},{TState}}
      description: The reducer function that takes only the state and returns a new state.
    typeParameters:
    - id: TAction
      description: The type of the action.
    content.vb: Public Sub [On](Of TAction)(reducer As Func(Of TState, TState))
  overload: R3dux.SliceReducers`1.On*
  nameWithType.vb: SliceReducers(Of TState).On(Of TAction)(Func(Of TState, TState))
  fullName.vb: R3dux.SliceReducers(Of TState).On(Of TAction)(System.Func(Of TState, TState))
  name.vb: On(Of TAction)(Func(Of TState, TState))
- uid: R3dux.SliceReducers`1.On``1(System.Func{`0})
  commentId: M:R3dux.SliceReducers`1.On``1(System.Func{`0})
  id: On``1(System.Func{`0})
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: On<TAction>(Func<TState>)
  nameWithType: SliceReducers<TState>.On<TAction>(Func<TState>)
  fullName: R3dux.SliceReducers<TState>.On<TAction>(System.Func<TState>)
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: On
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 142
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Maps a reducer function to a specific action type.
  example: []
  syntax:
    content: public void On<TAction>(Func<TState> reducer)
    parameters:
    - id: reducer
      type: System.Func{{TState}}
      description: The reducer function that takes no arguments and returns a new state.
    typeParameters:
    - id: TAction
      description: The type of the action.
    content.vb: Public Sub [On](Of TAction)(reducer As Func(Of TState))
  overload: R3dux.SliceReducers`1.On*
  nameWithType.vb: SliceReducers(Of TState).On(Of TAction)(Func(Of TState))
  fullName.vb: R3dux.SliceReducers(Of TState).On(Of TAction)(System.Func(Of TState))
  name.vb: On(Of TAction)(Func(Of TState))
- uid: R3dux.SliceReducers`1.Reduce(`0,R3dux.Abstractions.IAction)
  commentId: M:R3dux.SliceReducers`1.Reduce(`0,R3dux.Abstractions.IAction)
  id: Reduce(`0,R3dux.Abstractions.IAction)
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: Reduce(TState, IAction)
  nameWithType: SliceReducers<TState>.Reduce(TState, IAction)
  fullName: R3dux.SliceReducers<TState>.Reduce(TState, R3dux.Abstractions.IAction)
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: Reduce
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 155
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Reduces the state using the appropriate reducer for the given action.
  example: []
  syntax:
    content: public TState Reduce(TState state, IAction action)
    parameters:
    - id: state
      type: '{TState}'
      description: The current state.
    - id: action
      type: R3dux.Abstractions.IAction
      description: The action to apply to the state.
    return:
      type: '{TState}'
      description: The new state after applying the reducer, or the original state if no reducer is found.
    content.vb: Public Function Reduce(state As TState, action As IAction) As TState
  overload: R3dux.SliceReducers`1.Reduce*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the action is null.
  nameWithType.vb: SliceReducers(Of TState).Reduce(TState, IAction)
  fullName.vb: R3dux.SliceReducers(Of TState).Reduce(TState, R3dux.Abstractions.IAction)
- uid: R3dux.SliceReducers`1.GetInitialState
  commentId: M:R3dux.SliceReducers`1.GetInitialState
  id: GetInitialState
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: GetInitialState()
  nameWithType: SliceReducers<TState>.GetInitialState()
  fullName: R3dux.SliceReducers<TState>.GetInitialState()
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: GetInitialState
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 168
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Gets the initial state of the reducer.
  example: []
  syntax:
    content: public virtual TState GetInitialState()
    return:
      type: '{TState}'
      description: The initial state.
    content.vb: Public Overridable Function GetInitialState() As TState
  overload: R3dux.SliceReducers`1.GetInitialState*
  nameWithType.vb: SliceReducers(Of TState).GetInitialState()
  fullName.vb: R3dux.SliceReducers(Of TState).GetInitialState()
- uid: R3dux.SliceReducers`1.Dispose
  commentId: M:R3dux.SliceReducers`1.Dispose
  id: Dispose
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SliceReducers<TState>.Dispose()
  fullName: R3dux.SliceReducers<TState>.Dispose()
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: Dispose
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 176
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: R3dux.SliceReducers`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: SliceReducers(Of TState).Dispose()
  fullName.vb: R3dux.SliceReducers(Of TState).Dispose()
- uid: R3dux.SliceReducers`1.Dispose(System.Boolean)
  commentId: M:R3dux.SliceReducers`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: R3dux.SliceReducers`1
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: SliceReducers<TState>.Dispose(bool)
  fullName: R3dux.SliceReducers<TState>.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/library/R3dux/SliceReducers.cs
      branch: features/crud
      repo: https://github.com/phmatray/R3dux.git
    id: Dispose
    path: ../src/library/R3dux/SliceReducers.cs
    startLine: 187
  assemblies:
  - R3dux
  namespace: R3dux
  summary: Releases the unmanaged resources used by the <xref href="R3dux.SliceReducers%601" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: If true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed. If false, the method has been called by the runtime from inside the finalizer and only unmanaged resources can be disposed.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: R3dux.SliceReducers`1.Dispose*
  nameWithType.vb: SliceReducers(Of TState).Dispose(Boolean)
  fullName.vb: R3dux.SliceReducers(Of TState).Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: R3dux
  commentId: N:R3dux
  href: R3dux.html
  name: R3dux
  nameWithType: R3dux
  fullName: R3dux
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: R3dux.Abstractions.ISlice{{TState}}
  commentId: T:R3dux.Abstractions.ISlice{`0}
  parent: R3dux.Abstractions
  definition: R3dux.Abstractions.ISlice`1
  href: R3dux.Abstractions.ISlice-1.html
  name: ISlice<TState>
  nameWithType: ISlice<TState>
  fullName: R3dux.Abstractions.ISlice<TState>
  nameWithType.vb: ISlice(Of TState)
  fullName.vb: R3dux.Abstractions.ISlice(Of TState)
  name.vb: ISlice(Of TState)
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice`1
    name: ISlice
    href: R3dux.Abstractions.ISlice-1.html
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: R3dux.Abstractions.ISlice`1
    name: ISlice
    href: R3dux.Abstractions.ISlice-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: R3dux.Abstractions.ISlice
  commentId: T:R3dux.Abstractions.ISlice
  parent: R3dux.Abstractions
  href: R3dux.Abstractions.ISlice.html
  name: ISlice
  nameWithType: ISlice
  fullName: R3dux.Abstractions.ISlice
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IEquatable{R3dux.SliceReducers`1}
  commentId: T:System.IEquatable{R3dux.SliceReducers`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SliceReducers<TState>>
  nameWithType: IEquatable<SliceReducers<TState>>
  fullName: System.IEquatable<R3dux.SliceReducers<TState>>
  nameWithType.vb: IEquatable(Of SliceReducers(Of TState))
  fullName.vb: System.IEquatable(Of R3dux.SliceReducers(Of TState))
  name.vb: IEquatable(Of SliceReducers(Of TState))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: R3dux.SliceReducers`1
    name: SliceReducers
    href: R3dux.SliceReducers-1.html
  - name: <
  - name: TState
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: R3dux.SliceReducers`1
    name: SliceReducers
    href: R3dux.SliceReducers-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: R3dux.Abstractions.ISlice`1
  commentId: T:R3dux.Abstractions.ISlice`1
  href: R3dux.Abstractions.ISlice-1.html
  name: ISlice<TState>
  nameWithType: ISlice<TState>
  fullName: R3dux.Abstractions.ISlice<TState>
  nameWithType.vb: ISlice(Of TState)
  fullName.vb: R3dux.Abstractions.ISlice(Of TState)
  name.vb: ISlice(Of TState)
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice`1
    name: ISlice
    href: R3dux.Abstractions.ISlice-1.html
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: R3dux.Abstractions.ISlice`1
    name: ISlice
    href: R3dux.Abstractions.ISlice-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: R3dux.Abstractions
  commentId: N:R3dux.Abstractions
  href: R3dux.html
  name: R3dux.Abstractions
  nameWithType: R3dux.Abstractions
  fullName: R3dux.Abstractions
  spec.csharp:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
  spec.vb:
  - uid: R3dux
    name: R3dux
    href: R3dux.html
  - name: .
  - uid: R3dux.Abstractions
    name: Abstractions
    href: R3dux.Abstractions.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3dux.SliceReducers`1.State*
  commentId: Overload:R3dux.SliceReducers`1.State
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_State
  name: State
  nameWithType: SliceReducers<TState>.State
  fullName: R3dux.SliceReducers<TState>.State
  nameWithType.vb: SliceReducers(Of TState).State
  fullName.vb: R3dux.SliceReducers(Of TState).State
- uid: R3dux.Abstractions.ISlice{{TState}}.State
  commentId: P:R3dux.Abstractions.ISlice{`0}.State
  parent: R3dux.Abstractions.ISlice{{TState}}
  definition: R3dux.Abstractions.ISlice`1.State
  href: R3dux.Abstractions.ISlice-1.html#R3dux_Abstractions_ISlice_1_State
  name: State
  nameWithType: ISlice<TState>.State
  fullName: R3dux.Abstractions.ISlice<TState>.State
  nameWithType.vb: ISlice(Of TState).State
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).State
- uid: R3.Observable{{TState}}
  commentId: T:R3.Observable{`0}
  parent: R3
  definition: R3.Observable`1
  name: Observable<TState>
  nameWithType: Observable<TState>
  fullName: R3.Observable<TState>
  nameWithType.vb: Observable(Of TState)
  fullName.vb: R3.Observable(Of TState)
  name.vb: Observable(Of TState)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: R3dux.Abstractions.ISlice`1.State
  commentId: P:R3dux.Abstractions.ISlice`1.State
  href: R3dux.Abstractions.ISlice-1.html#R3dux_Abstractions_ISlice_1_State
  name: State
  nameWithType: ISlice<TState>.State
  fullName: R3dux.Abstractions.ISlice<TState>.State
  nameWithType.vb: ISlice(Of TState).State
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).State
- uid: R3.Observable`1
  commentId: T:R3.Observable`1
  isExternal: true
  name: Observable<T>
  nameWithType: Observable<T>
  fullName: R3.Observable<T>
  nameWithType.vb: Observable(Of T)
  fullName.vb: R3.Observable(Of T)
  name.vb: Observable(Of T)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: R3
  commentId: N:R3
  isExternal: true
  name: R3
  nameWithType: R3
  fullName: R3
- uid: R3dux.SliceReducers`1.StateUpdated*
  commentId: Overload:R3dux.SliceReducers`1.StateUpdated
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_StateUpdated
  name: StateUpdated
  nameWithType: SliceReducers<TState>.StateUpdated
  fullName: R3dux.SliceReducers<TState>.StateUpdated
  nameWithType.vb: SliceReducers(Of TState).StateUpdated
  fullName.vb: R3dux.SliceReducers(Of TState).StateUpdated
- uid: R3dux.Abstractions.ISlice.StateUpdated
  commentId: P:R3dux.Abstractions.ISlice.StateUpdated
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_StateUpdated
  name: StateUpdated
  nameWithType: ISlice.StateUpdated
  fullName: R3dux.Abstractions.ISlice.StateUpdated
- uid: R3.Observable{R3.Unit}
  commentId: T:R3.Observable{R3.Unit}
  parent: R3
  definition: R3.Observable`1
  name: Observable<Unit>
  nameWithType: Observable<Unit>
  fullName: R3.Observable<R3.Unit>
  nameWithType.vb: Observable(Of Unit)
  fullName.vb: R3.Observable(Of R3.Unit)
  name.vb: Observable(Of Unit)
  spec.csharp:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: <
  - uid: R3.Unit
    name: Unit
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: R3.Observable`1
    name: Observable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: R3.Unit
    name: Unit
    isExternal: true
  - name: )
- uid: R3dux.SliceReducers`1.Reducers*
  commentId: Overload:R3dux.SliceReducers`1.Reducers
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_Reducers
  name: Reducers
  nameWithType: SliceReducers<TState>.Reducers
  fullName: R3dux.SliceReducers<TState>.Reducers
  nameWithType.vb: SliceReducers(Of TState).Reducers
  fullName.vb: R3dux.SliceReducers(Of TState).Reducers
- uid: R3dux.Abstractions.ISlice{{TState}}.Reducers
  commentId: P:R3dux.Abstractions.ISlice{`0}.Reducers
  parent: R3dux.Abstractions.ISlice{{TState}}
  definition: R3dux.Abstractions.ISlice`1.Reducers
  href: R3dux.Abstractions.ISlice-1.html#R3dux_Abstractions_ISlice_1_Reducers
  name: Reducers
  nameWithType: ISlice<TState>.Reducers
  fullName: R3dux.Abstractions.ISlice<TState>.Reducers
  nameWithType.vb: ISlice(Of TState).Reducers
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).Reducers
- uid: System.Collections.Generic.Dictionary{System.Type,System.Func{{TState},R3dux.Abstractions.IAction,{TState}}}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,System.Func{`0,R3dux.Abstractions.IAction,`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Type, Func<TState, IAction, TState>>
  nameWithType: Dictionary<Type, Func<TState, IAction, TState>>
  fullName: System.Collections.Generic.Dictionary<System.Type, System.Func<TState, R3dux.Abstractions.IAction, TState>>
  nameWithType.vb: Dictionary(Of Type, Func(Of TState, IAction, TState))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, System.Func(Of TState, R3dux.Abstractions.IAction, TState))
  name.vb: Dictionary(Of Type, Func(Of TState, IAction, TState))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: ','
  - name: " "
  - name: TState
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: ','
  - name: " "
  - name: TState
  - name: )
  - name: )
- uid: R3dux.Abstractions.ISlice`1.Reducers
  commentId: P:R3dux.Abstractions.ISlice`1.Reducers
  href: R3dux.Abstractions.ISlice-1.html#R3dux_Abstractions_ISlice_1_Reducers
  name: Reducers
  nameWithType: ISlice<TState>.Reducers
  fullName: R3dux.Abstractions.ISlice<TState>.Reducers
  nameWithType.vb: ISlice(Of TState).Reducers
  fullName.vb: R3dux.Abstractions.ISlice(Of TState).Reducers
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: R3dux.SliceReducers`1.GetKey*
  commentId: Overload:R3dux.SliceReducers`1.GetKey
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_GetKey
  name: GetKey
  nameWithType: SliceReducers<TState>.GetKey
  fullName: R3dux.SliceReducers<TState>.GetKey
  nameWithType.vb: SliceReducers(Of TState).GetKey
  fullName.vb: R3dux.SliceReducers(Of TState).GetKey
- uid: R3dux.Abstractions.ISlice.GetKey
  commentId: M:R3dux.Abstractions.ISlice.GetKey
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetKey
  name: GetKey()
  nameWithType: ISlice.GetKey()
  fullName: R3dux.Abstractions.ISlice.GetKey()
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.GetKey
    name: GetKey
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetKey
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.GetKey
    name: GetKey
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetKey
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: R3dux.SliceReducers`1.GetStateType*
  commentId: Overload:R3dux.SliceReducers`1.GetStateType
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_GetStateType
  name: GetStateType
  nameWithType: SliceReducers<TState>.GetStateType
  fullName: R3dux.SliceReducers<TState>.GetStateType
  nameWithType.vb: SliceReducers(Of TState).GetStateType
  fullName.vb: R3dux.SliceReducers(Of TState).GetStateType
- uid: R3dux.Abstractions.ISlice.GetStateType
  commentId: M:R3dux.Abstractions.ISlice.GetStateType
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetStateType
  name: GetStateType()
  nameWithType: ISlice.GetStateType()
  fullName: R3dux.Abstractions.ISlice.GetStateType()
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.GetStateType
    name: GetStateType
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetStateType
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.GetStateType
    name: GetStateType
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetStateType
  - name: (
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: R3dux.SliceReducers`1.GetState*
  commentId: Overload:R3dux.SliceReducers`1.GetState
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_GetState
  name: GetState
  nameWithType: SliceReducers<TState>.GetState
  fullName: R3dux.SliceReducers<TState>.GetState
  nameWithType.vb: SliceReducers(Of TState).GetState
  fullName.vb: R3dux.SliceReducers(Of TState).GetState
- uid: R3dux.Abstractions.ISlice.GetState
  commentId: M:R3dux.Abstractions.ISlice.GetState
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetState
  name: GetState()
  nameWithType: ISlice.GetState()
  fullName: R3dux.Abstractions.ISlice.GetState()
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.GetState
    name: GetState
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetState
  - name: (
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.GetState
    name: GetState
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_GetState
  - name: (
  - name: )
- uid: R3dux.SliceReducers`1.OnDispatch*
  commentId: Overload:R3dux.SliceReducers`1.OnDispatch
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_OnDispatch_R3dux_Abstractions_IAction_
  name: OnDispatch
  nameWithType: SliceReducers<TState>.OnDispatch
  fullName: R3dux.SliceReducers<TState>.OnDispatch
  nameWithType.vb: SliceReducers(Of TState).OnDispatch
  fullName.vb: R3dux.SliceReducers(Of TState).OnDispatch
- uid: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  commentId: M:R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  parent: R3dux.Abstractions.ISlice
  href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_OnDispatch_R3dux_Abstractions_IAction_
  name: OnDispatch(IAction)
  nameWithType: ISlice.OnDispatch(IAction)
  fullName: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
  spec.csharp:
  - uid: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
    name: OnDispatch
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_OnDispatch_R3dux_Abstractions_IAction_
  - name: (
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
  spec.vb:
  - uid: R3dux.Abstractions.ISlice.OnDispatch(R3dux.Abstractions.IAction)
    name: OnDispatch
    href: R3dux.Abstractions.ISlice.html#R3dux_Abstractions_ISlice_OnDispatch_R3dux_Abstractions_IAction_
  - name: (
  - uid: R3dux.Abstractions.IAction
    name: IAction
    href: R3dux.Abstractions.IAction.html
  - name: )
- uid: R3dux.Abstractions.IAction
  commentId: T:R3dux.Abstractions.IAction
  parent: R3dux.Abstractions
  href: R3dux.Abstractions.IAction.html
  name: IAction
  nameWithType: IAction
  fullName: R3dux.Abstractions.IAction
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: R3dux.SliceReducers`1.On*
  commentId: Overload:R3dux.SliceReducers`1.On
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_On__1_System_Func__0___0__0__
  name: On
  nameWithType: SliceReducers<TState>.On
  fullName: R3dux.SliceReducers<TState>.On
  nameWithType.vb: SliceReducers(Of TState).On
  fullName.vb: R3dux.SliceReducers(Of TState).On
- uid: System.Func{{TState},{TAction},{TState}}
  commentId: T:System.Func{`0,``0,`0}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<TState, TAction, TState>
  nameWithType: Func<TState, TAction, TState>
  fullName: System.Func<TState, TAction, TState>
  nameWithType.vb: Func(Of TState, TAction, TState)
  fullName.vb: System.Func(Of TState, TAction, TState)
  name.vb: Func(Of TState, TAction, TState)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - name: TAction
  - name: ','
  - name: " "
  - name: TState
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - name: TAction
  - name: ','
  - name: " "
  - name: TState
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{{TState},{TState}}
  commentId: T:System.Func{`0,`0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TState, TState>
  nameWithType: Func<TState, TState>
  fullName: System.Func<TState, TState>
  nameWithType.vb: Func(Of TState, TState)
  fullName.vb: System.Func(Of TState, TState)
  name.vb: Func(Of TState, TState)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TState
  - name: ','
  - name: " "
  - name: TState
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: ','
  - name: " "
  - name: TState
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{{TState}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TState>
  nameWithType: Func<TState>
  fullName: System.Func<TState>
  nameWithType.vb: Func(Of TState)
  fullName.vb: System.Func(Of TState)
  name.vb: Func(Of TState)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: R3dux.SliceReducers`1.Reduce*
  commentId: Overload:R3dux.SliceReducers`1.Reduce
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_Reduce__0_R3dux_Abstractions_IAction_
  name: Reduce
  nameWithType: SliceReducers<TState>.Reduce
  fullName: R3dux.SliceReducers<TState>.Reduce
  nameWithType.vb: SliceReducers(Of TState).Reduce
  fullName.vb: R3dux.SliceReducers(Of TState).Reduce
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: R3dux.SliceReducers`1.GetInitialState*
  commentId: Overload:R3dux.SliceReducers`1.GetInitialState
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_GetInitialState
  name: GetInitialState
  nameWithType: SliceReducers<TState>.GetInitialState
  fullName: R3dux.SliceReducers<TState>.GetInitialState
  nameWithType.vb: SliceReducers(Of TState).GetInitialState
  fullName.vb: R3dux.SliceReducers(Of TState).GetInitialState
- uid: R3dux.SliceReducers`1.Dispose*
  commentId: Overload:R3dux.SliceReducers`1.Dispose
  href: R3dux.SliceReducers-1.html#R3dux_SliceReducers_1_Dispose
  name: Dispose
  nameWithType: SliceReducers<TState>.Dispose
  fullName: R3dux.SliceReducers<TState>.Dispose
  nameWithType.vb: SliceReducers(Of TState).Dispose
  fullName.vb: R3dux.SliceReducers(Of TState).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: R3dux.SliceReducers`1
  commentId: T:R3dux.SliceReducers`1
  href: R3dux.SliceReducers-1.html
  name: SliceReducers<TState>
  nameWithType: SliceReducers<TState>
  fullName: R3dux.SliceReducers<TState>
  nameWithType.vb: SliceReducers(Of TState)
  fullName.vb: R3dux.SliceReducers(Of TState)
  name.vb: SliceReducers(Of TState)
  spec.csharp:
  - uid: R3dux.SliceReducers`1
    name: SliceReducers
    href: R3dux.SliceReducers-1.html
  - name: <
  - name: TState
  - name: '>'
  spec.vb:
  - uid: R3dux.SliceReducers`1
    name: SliceReducers
    href: R3dux.SliceReducers-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TState
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
