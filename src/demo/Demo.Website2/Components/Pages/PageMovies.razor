@page "/movies"
@inherits DuckyComponent<MoviesState>
@inject NavigationManager Navigation

<PageTitle>Ducky - Movies</PageTitle>

<MudGrid>
  <MudItem xs="12">
    <MudStack>
      <MudText Typo="Typo.subtitle1">Example</MudText>
      <MudText Typo="Typo.h3">Movies</MudText>
      <MudText Typo="Typo.body1">
        Creates a simple movie example using the Ducky state management library for predictable state handling,<br/>
        featuring loading state and error handling for displaying movies.
      </MudText>
      <MudList T="string" Dense="true">
        <Goal Condition="() => State.SelectMovieCount() > 0" ConditionKey="movies-exist">
          Movies loaded successfully.
        </Goal>
      </MudList>
    </MudStack>
  </MudItem>

  <MudItem xs="12">
    @if (IsLoading)
    {
      <MudButton Variant="Variant.Outlined" Disabled>Please wait...</MudButton>
    }
    else
    {
      <MudButton Variant="Variant.Outlined" OnClick="LoadMovies">Reload Movies</MudButton>
    }
  </MudItem>
  
  <MudItem xs="12">
    @if (ErrorMessage != null)
    {
      <MudText Color="Color.Error"><strong>@ErrorMessage</strong></MudText>
    }
    else if (IsLoading)
    {
      <MudText><strong>Loading movies...</strong></MudText>
      
      <MudProgressLinear
        Color="Color.Primary"
        Size="Size.Large"
        Rounded
        Indeterminate/>
    }
    else
    {
      <MudSimpleTable>
        <thead>
        <tr>
          <th>Title</th>
          <th>Director</th>
          <th>Year</th>
          <th>Duration</th>
          <th>Score</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var movie in Movies.Values)
        {
          <tr>
            <td>@movie.Title</td>
            <td>@movie.Director</td>
            <td>@movie.Year</td>
            <td>@movie.Duration</td>
            <td>
              <MudStack Row AlignItems="AlignItems.Baseline">
                <MudRating SelectedValue="@movie.Score" ReadOnly/>
                <MudIconButton 
                  Icon="@Icons.Material.Filled.Info"
                  OnClick="() => GoToMovieDetails(movie.Id)"/>
              </MudStack>
            </td>
          </tr>
        }
        </tbody>
      </MudSimpleTable>
    }
  </MudItem>

  <MudItem xs="12">
    <MudStack Row Justify="Justify.Center">
      <MudPagination
        SelectedChanged="SetCurrentPage"
        Variant="Variant.Filled"
        Count="@TotalPages"
        ShowFirstButton="true"
        ShowLastButton="true"/>
    </MudStack>
  </MudItem>
</MudGrid>

@code {
  
  // TODO: Master/Detail view with selected movie details.
  
  private ImmutableDictionary<int, Movie> Movies
    => State.SelectMoviesByYear();
  
  private bool IsLoading
    => State.IsLoading;
  
  private string? ErrorMessage
    => State.ErrorMessage;
  
  private int TotalPages
    => State.Pagination.TotalPages;

  protected override void OnAfterSubscribed()
  {
    if (Movies.Count == 0)
    {
      LoadMovies();
    }
  }
  
  private void LoadMovies()
  {
    Dispatch(new LoadMovies());
  }

  private void SetCurrentPage(int page)
  {
    Dispatch(new SetCurrentPage(page));
    Dispatch(new LoadMovies());
  }
  
  private void GoToMovieDetails(int movieId)
  {
    Navigation.NavigateTo($"/movies/{movieId}");
  }

}
