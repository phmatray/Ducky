@inherits R3duxLayout<LayoutState>

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />

<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
  <MudAppBar Elevation="1">
    <MudIconButton
      Icon="@Icons.Material.Filled.Menu"
      Color="Color.Inherit" 
      Edge="Edge.Start"
      OnClick="@((e) => DrawerToggle())" />
    <MudText Typo="Typo.h5" Class="ml-3">@State.SelectFullTitle()</MudText>
    <MudSpacer />
    <MudIconButton
      Icon="@(DarkLightModeButtonIcon)"
      Color="Color.Inherit"
      OnClick="@DarkModeToggle" />
    <MudIconButton
      Icon="@Icons.Material.Filled.MoreVert"
      Color="Color.Inherit"
      Edge="Edge.End"
      @onclick="OpenAboutDialog" />
  </MudAppBar>
  <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
    <NavMenu />
  </MudDrawer>
  <MudMainContent Class="mt-4 pa-4">
    @Body
  </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
  An unhandled error has occurred.
  <a href="" class="reload">Reload</a>
  <a class="dismiss">🗙</a>
</div>

@code {

  private bool _drawerOpen = true;
  private bool _isDarkMode = true;
  private MudTheme? _theme;

  protected override void OnInitialized()
  {
    base.OnInitialized();

    _theme = new()
    {
      PaletteLight = _lightPalette,
      PaletteDark = _darkPalette,
      LayoutProperties = new LayoutProperties()
    };
  }

  private void DrawerToggle()
  {
    _drawerOpen = !_drawerOpen;
  }

  private void DarkModeToggle()
  {
    _isDarkMode = !_isDarkMode;
  }

  private readonly PaletteLight _lightPalette = new()
  {
    Black = "#110e2d",
    AppbarText = "#424242",
    AppbarBackground = "rgba(255,255,255,0.8)",
    DrawerBackground = "#ffffff",
    GrayLight = "#e8e8e8",
    GrayLighter = "#f9f9f9",
  };

  private readonly PaletteDark _darkPalette = new()
  {
    // Adapted from Dracula 
    // https://github.com/dracula/dracula-theme

    Primary = "#bd93f9", // Purple
    Secondary = "ffb86c", // Orange
    Info = "#8be9fd", // Cyan
    Success = "#50fa7b", // Green
    Warning = "#f1fa8c", // Yellow
    Error = "#ff5555", // Red
    GrayLight = "#2a2833",
    GrayLighter = "#44475a", // Current Line
    
    Surface = "#44475a", // Current Line
    Background = "#282a36", // Background
    BackgroundGray = "#151521",
    
    TextPrimary = "#f8f8f2", // Foreground
    TextSecondary = "#f8f8f2", // Foreground
    TextDisabled = "#ffffff33",
    
    AppbarText = "#f8f8f2", // Foreground
    AppbarBackground = "#6272a4", // Comment
    
    DrawerBackground = "#44475a", // Selection
    DrawerIcon = "#f8f8f2", // Foreground
    DrawerText = "#f8f8f2", // Foreground
    
    ActionDefault = "#74718e",
    ActionDisabled = "#9999994d",
    ActionDisabledBackground = "#605f6d4d",
    
    LinesDefault = "#33323e",
    TableLines = "#33323e",
    Divider = "#292838",
    OverlayLight = "#44475a80", // Current Line @ 50%
  };

  public string DarkLightModeButtonIcon => _isDarkMode switch
  {
    true => Icons.Material.Rounded.AutoMode,
    false => Icons.Material.Outlined.DarkMode,
  };

  private void OpenAboutDialog()
    => Dispatch(new OpenAboutDialog());

}
